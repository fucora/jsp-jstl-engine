public class TemplateContext{
    private String home;
    private int expire;
    private String charset;
    private SourceFactory sourceFactory;
    private TemplateFactory templateFactory;

    public Template getTemplate();

    public void execute(String path, Map<String, Object> context, Writer writer);

    public void execute(Template template, Map<String, Object> context, Writer writer);
}

public class TemplateFactory{
    private boolean ignoreJspTag = true;

    public abstract Template create();
}

public class JspTemplateFactory{
    /* @return JspTemplate */
    public Template create();
}

public JspFactory {
    public static PageContext getPageContext(TemplateContext templateContext, Writer out, int buffserSize, boolean autoFlush) {
        JspWriter jspWriter = new JspWriter(out, buffserSize, autoFlush);
        DefaultPageContext pageContext = new DefaultPageContext(jspWriter);
        ExpressionContext expressionContext = ExpressionFactory.getExpressionContext(pageContext);
        TagLibrary tagLibrary = TagLibraryFactory.getStandardTagLibrary();
        pageContext.setTagLibrary(tagLibrary);
        pageContext.setTemplateContext(templateContext);
        pageContext.setExpressionContext(expressionContext);
        return pageContext;
    }
}