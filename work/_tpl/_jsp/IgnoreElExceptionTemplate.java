/*
 * $RCSfile: IgnoreElExceptionTemplate.java,v $$
 * $Revision: 1.1 $
 * $Date: 2017-02-09 $
 *
 * Copyright (C) 2008 Skin, Inc. All rights reserved.
 *
 * This software is the proprietary information of Skin, Inc.
 * Use is subject to license terms.
 *
 * home: E:/WorkSpace/ayada/webapp
 * path: /ignoreElException.jsp
 * lastModified: 2017-02-07 23:32:54 768
 * options: -fastJstl true
 * template.dependencies
 * -- /ignoreElException.jsp
 *
 * JSP generated by JspCompiler-1.0.1.4 (built 2017-02-09 00:51:31 814)
 */
package _tpl._jsp;

import java.io.Writer;
import com.skin.ayada.runtime.ExpressionContext;
import com.skin.ayada.runtime.JspWriter;
import com.skin.ayada.runtime.PageContext;
import com.skin.ayada.tagext.BodyContent;
import com.skin.ayada.tagext.BodyTag;
import com.skin.ayada.tagext.IterationTag;
import com.skin.ayada.tagext.JspFragment;
import com.skin.ayada.tagext.Tag;
import com.skin.ayada.template.JspTemplate;
import com.skin.ayada.util.ExpressionUtil;


/**
 * <p>Title: IgnoreElExceptionTemplate</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2006</p>
 * @author JspCompiler
 * @version 1.0
 */
@SuppressWarnings("unused")
public class IgnoreElExceptionTemplate extends JspTemplate {
    /**
     * @param args
     */
    public static void main(String[] args){
        java.io.StringWriter writer = new java.io.StringWriter();
        PageContext pageContext = com.skin.ayada.runtime.JspFactory.getPageContext(writer);
        IgnoreElExceptionTemplate template = new IgnoreElExceptionTemplate();

        try {
            template.execute(pageContext);
            System.out.println(writer.toString());
        }
        catch(Throwable throwable) {
            throwable.printStackTrace();
        }
    }

    /**
     * @param pageContext
     * @throws Throwable
     */
    @Override
    @SuppressWarnings("unchecked")
    public void _execute(final PageContext pageContext) throws Throwable {
        JspWriter out = pageContext.getOut();
        JspWriter jspWriter = pageContext.getOut();
        ExpressionContext expressionContext = pageContext.getExpressionContext();
        // jsp:directive.page: lineNumber: 1
        // <jsp:directive.page contentType="text/html; charset=UTF-8" buffer="8192" autoFlush="true"/>

        // TEXT: lineNumber: 1
        // out.write("<!--\r\nayada允许以静默模式执行el表达式\r\n当el表达式执行失败时, 通常情况下是因为引用的对象出现了空值, 例如下面的示例:\r\nignoreElException变量用来通知el引擎当发生这种情况时是否抛出异常\r\ntrue: 不抛异常\r\nfalse: 抛出异常\r\n\r\n该变量可以在任何时候任何位置设置, 即时生效.\r\n所以它可以配置在全局配置文件中, 也可以在servlet中设置到request中, 也可以在页面上临时设置\r\n-->\r\n");
        out.write(_jsp_string_3, 0, _jsp_string_3.length);

        // NODE START: lineNumber: 12, offset: 3, length: 2, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_4
        // <c:set var=\"ignoreElException\" value=\"true\"/>
        pageContext.setAttribute("ignoreElException", true);
        // jsp.jstl.core.SetTag END
        // NODE END: lineNumber: 12, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_4

        // EXPRESSION: lineNumber: 13
        expressionContext.print(out, expressionContext.getString("aaa.bbb.ccc"));
        // TEXT: lineNumber: 13
        // out.write("\r\n\r\n");
        out.write(_jsp_string_7, 0, _jsp_string_7.length);

        // NODE START: lineNumber: 15, offset: 7, length: 2, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_8
        // <c:set var=\"ignoreElException\" value=\"true\"/>
        pageContext.setAttribute("ignoreElException", true);
        // jsp.jstl.core.SetTag END
        // NODE END: lineNumber: 15, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_8

        // EXPRESSION: lineNumber: 16
        expressionContext.print(out, expressionContext.getString("aaa.bbb.ccc"));
        // TEXT: lineNumber: 16
        // out.write("\r\n");
        out.write(_jsp_string_11, 0, _jsp_string_11.length);

        out.flush();
        jspWriter.flush();
    }

    protected static final char[] _jsp_string_3 = "<!--\r\nayada允许以静默模式执行el表达式\r\n当el表达式执行失败时, 通常情况下是因为引用的对象出现了空值, 例如下面的示例:\r\nignoreElException变量用来通知el引擎当发生这种情况时是否抛出异常\r\ntrue: 不抛异常\r\nfalse: 抛出异常\r\n\r\n该变量可以在任何时候任何位置设置, 即时生效.\r\n所以它可以配置在全局配置文件中, 也可以在servlet中设置到request中, 也可以在页面上临时设置\r\n-->\r\n".toCharArray();
    protected static final char[] _jsp_string_7 = "\r\n\r\n".toCharArray();
    protected static final char[] _jsp_string_11 = "\r\n".toCharArray();

}
