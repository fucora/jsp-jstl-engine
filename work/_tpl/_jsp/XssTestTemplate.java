/*
 * $RCSfile: XssTestTemplate.java,v $$
 * $Revision: 1.1 $
 * $Date: 2017-02-09 $
 *
 * Copyright (C) 2008 Skin, Inc. All rights reserved.
 *
 * This software is the proprietary information of Skin, Inc.
 * Use is subject to license terms.
 *
 * home: E:/WorkSpace/ayada/webapp
 * path: /xssTest.jsp
 * lastModified: 2016-01-15 17:48:36 000
 * options: -fastJstl true
 * template.dependencies
 * -- /xssTest.jsp
 *
 * JSP generated by JspCompiler-1.0.1.4 (built 2017-02-09 00:51:43 230)
 */
package _tpl._jsp;

import java.io.Writer;
import com.skin.ayada.runtime.ExpressionContext;
import com.skin.ayada.runtime.JspWriter;
import com.skin.ayada.runtime.PageContext;
import com.skin.ayada.tagext.BodyContent;
import com.skin.ayada.tagext.BodyTag;
import com.skin.ayada.tagext.IterationTag;
import com.skin.ayada.tagext.JspFragment;
import com.skin.ayada.tagext.Tag;
import com.skin.ayada.template.JspTemplate;
import com.skin.ayada.util.ExpressionUtil;


/**
 * <p>Title: XssTestTemplate</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2006</p>
 * @author JspCompiler
 * @version 1.0
 */
@SuppressWarnings("unused")
public class XssTestTemplate extends JspTemplate {
    /**
     * @param args
     */
    public static void main(String[] args){
        java.io.StringWriter writer = new java.io.StringWriter();
        PageContext pageContext = com.skin.ayada.runtime.JspFactory.getPageContext(writer);
        XssTestTemplate template = new XssTestTemplate();

        try {
            template.execute(pageContext);
            System.out.println(writer.toString());
        }
        catch(Throwable throwable) {
            throwable.printStackTrace();
        }
    }

    /**
     * @param pageContext
     * @throws Throwable
     */
    @Override
    @SuppressWarnings("unchecked")
    public void _execute(final PageContext pageContext) throws Throwable {
        JspWriter out = pageContext.getOut();
        JspWriter jspWriter = pageContext.getOut();
        ExpressionContext expressionContext = pageContext.getExpressionContext();
        // NODE START: lineNumber: 1, offset: 0, length: 5, tagClassName: com.skin.ayada.jstl.core.MapTag, tagInstanceName: _jsp_MapTag_1
        // <c:map name=\"user\">...</c:map>
        com.skin.ayada.jstl.core.MapTag _jsp_MapTag_1 = new com.skin.ayada.jstl.core.MapTag();
        try {
            _jsp_MapTag_1.setPageContext(pageContext);
            _jsp_MapTag_1.setParent((Tag)null);
            _jsp_MapTag_1.setDynamicAttribute("name", "user");
            int _jsp_start_flag_1 = _jsp_MapTag_1.doStartTag();

            if(_jsp_start_flag_1 == Tag.SKIP_PAGE) {
                return;
            }
            if(_jsp_start_flag_1 != Tag.SKIP_BODY) {
                int _jsp_flag_1 = 0;

                do {
                // NODE START: lineNumber: 2, offset: 1, length: 3, tagClassName: com.skin.ayada.jstl.core.AttributeTag, tagInstanceName: _jsp_AttributeTag_2
                // <c:entry name=\"input\">...</c:entry>
                out = pageContext.pushBody();
                // TEXT: lineNumber: 2
                // out.write("\";\r\nalert(1);\r\n//");
                out.write(_jsp_string_3, 0, _jsp_string_3.length);
                _jsp_MapTag_1.setAttribute("input", ((BodyContent)out).getString());
                out = pageContext.popBody();
                // jsp.jstl.core.AttributeTag END
                // NODE END: lineNumber: 2, tagClassName: com.skin.ayada.jstl.core.AttributeTag, tagInstanceName: _jsp_AttributeTag_2

                    _jsp_flag_1 = _jsp_MapTag_1.doAfterBody();
                }
                while(_jsp_flag_1 == IterationTag.EVAL_BODY_AGAIN);
            }
            _jsp_MapTag_1.doEndTag();
        }
        finally {
            this.doFinally(_jsp_MapTag_1);
        }
        // NODE END: lineNumber: 1, tagClassName: com.skin.ayada.jstl.core.MapTag, tagInstanceName: _jsp_MapTag_1

        // TEXT: lineNumber: 5
        // out.write("<script type=\"text/javascript\">\r\n// xss\r\nvar a = \"");
        out.write(_jsp_string_6, 0, _jsp_string_6.length);
        // EXPRESSION: lineNumber: 8
        expressionContext.print(out, expressionContext.getString("user.input"));
        // TEXT: lineNumber: 8
        // out.write("\";\r\n</script>\r\n\r\n<script type=\"text/javascript\">\r\n// xss filter\r\nvar a = \"");
        out.write(_jsp_string_8, 0, _jsp_string_8.length);
        // EXPRESSION: lineNumber: 13
        expressionContext.print(out, expressionContext.getString("StringUtil.escape(user.input)"));
        // TEXT: lineNumber: 13
        // out.write("\";\r\n</script>\r\n\r\n<x:escape encoder=\"html\">\r\n<p>");
        out.write(_jsp_string_10, 0, _jsp_string_10.length);
        // EXPRESSION: lineNumber: 17
        expressionContext.print(out, expressionContext.getString("user.input"));
        // TEXT: lineNumber: 17
        // out.write("</p>\r\n</x:escape>\r\n\r\n<x:escape encoder=\"code\">\r\n<script type=\"text/javascript\">\r\nvar a = \"");
        out.write(_jsp_string_12, 0, _jsp_string_12.length);
        // EXPRESSION: lineNumber: 22
        expressionContext.print(out, expressionContext.getString("user.input"));
        // TEXT: lineNumber: 22
        // out.write("\";\r\n</script>\r\n</x:escape>\r\n\r\n");
        out.write(_jsp_string_14, 0, _jsp_string_14.length);

        // NODE START: lineNumber: 26, offset: 14, length: 5, tagClassName: com.skin.ayada.jstl.core.SetEncoderTag, tagInstanceName: _jsp_SetEncoderTag_15
        // <c:setEncoder encoder=\"html\">...</c:setEncoder>
        com.skin.ayada.jstl.core.SetEncoderTag _jsp_SetEncoderTag_15 = new com.skin.ayada.jstl.core.SetEncoderTag();
        try {
            _jsp_SetEncoderTag_15.setPageContext(pageContext);
            _jsp_SetEncoderTag_15.setParent((Tag)null);
            _jsp_SetEncoderTag_15.setEncoder("html");
            int _jsp_start_flag_15 = _jsp_SetEncoderTag_15.doStartTag();

            if(_jsp_start_flag_15 == Tag.SKIP_PAGE) {
                return;
            }
            if(_jsp_start_flag_15 != Tag.SKIP_BODY) {
                int _jsp_flag_15 = 0;

                do {
                // TEXT: lineNumber: 26
                // out.write("<p>");
                out.write(_jsp_string_16, 0, _jsp_string_16.length);
                // EXPRESSION: lineNumber: 27
                expressionContext.print(out, expressionContext.getString("user.input"));
                // TEXT: lineNumber: 27
                // out.write("</p>\r\n");
                out.write(_jsp_string_18, 0, _jsp_string_18.length);
                    _jsp_flag_15 = _jsp_SetEncoderTag_15.doAfterBody();
                }
                while(_jsp_flag_15 == IterationTag.EVAL_BODY_AGAIN);
            }
            _jsp_SetEncoderTag_15.doEndTag();
        }
        finally {
            this.doFinally(_jsp_SetEncoderTag_15);
        }
        // NODE END: lineNumber: 26, tagClassName: com.skin.ayada.jstl.core.SetEncoderTag, tagInstanceName: _jsp_SetEncoderTag_15

        // TEXT: lineNumber: 28
        // out.write("\r\n<p>定义两个测试数据，这两个数据可能来源于用户输入。</p>\r\n");
        out.write(_jsp_string_20, 0, _jsp_string_20.length);

        // NODE START: lineNumber: 31, offset: 20, length: 3, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_21
        // <c:set var=\"myHtmlContent\">...</c:set>
        out = pageContext.pushBody();
        // TEXT: lineNumber: 31
        // out.write("<h1>Hello !</h1>");
        out.write(_jsp_string_22, 0, _jsp_string_22.length);
        pageContext.setAttribute("myHtmlContent", ((BodyContent)out).getString().trim());
        out = pageContext.popBody();
        // jsp.jstl.core.SetTag END
        // NODE END: lineNumber: 31, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_21

        // NODE START: lineNumber: 32, offset: 23, length: 3, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_24
        // <c:set var=\"myTextContent\">...</c:set>
        out = pageContext.pushBody();
        // TEXT: lineNumber: 32
        // out.write("\";\r\n// 下面是注入的代码\r\n// hello\r\n// 发送cookie到指定邮箱\r\nalert(document.cookie);\r\nvar a = \"test hello\r\n");
        out.write(_jsp_string_25, 0, _jsp_string_25.length);
        pageContext.setAttribute("myTextContent", ((BodyContent)out).getString().trim());
        out = pageContext.popBody();
        // jsp.jstl.core.SetTag END
        // NODE END: lineNumber: 32, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_24

        // TEXT: lineNumber: 39
        // out.write("\r\n<p>对该标签内的所有el表达式使用html编码：</p>\r\n");
        out.write(_jsp_string_27, 0, _jsp_string_27.length);

        // NODE START: lineNumber: 42, offset: 27, length: 5, tagClassName: com.skin.ayada.jstl.core.SetEncoderTag, tagInstanceName: _jsp_SetEncoderTag_28
        // <c:setEncoder encoder=\"html\">...</c:setEncoder>
        com.skin.ayada.jstl.core.SetEncoderTag _jsp_SetEncoderTag_28 = new com.skin.ayada.jstl.core.SetEncoderTag();
        try {
            _jsp_SetEncoderTag_28.setPageContext(pageContext);
            _jsp_SetEncoderTag_28.setParent((Tag)null);
            _jsp_SetEncoderTag_28.setEncoder("html");
            int _jsp_start_flag_28 = _jsp_SetEncoderTag_28.doStartTag();

            if(_jsp_start_flag_28 == Tag.SKIP_PAGE) {
                return;
            }
            if(_jsp_start_flag_28 != Tag.SKIP_BODY) {
                int _jsp_flag_28 = 0;

                do {
                // TEXT: lineNumber: 42
                // out.write("<p>");
                out.write(_jsp_string_29, 0, _jsp_string_29.length);
                // VARIABLE: lineNumber: 43
                expressionContext.print(out, pageContext.getAttribute("myHtmlContent"));
                // TEXT: lineNumber: 43
                // out.write("</p>\r\n");
                out.write(_jsp_string_31, 0, _jsp_string_31.length);
                    _jsp_flag_28 = _jsp_SetEncoderTag_28.doAfterBody();
                }
                while(_jsp_flag_28 == IterationTag.EVAL_BODY_AGAIN);
            }
            _jsp_SetEncoderTag_28.doEndTag();
        }
        finally {
            this.doFinally(_jsp_SetEncoderTag_28);
        }
        // NODE END: lineNumber: 42, tagClassName: com.skin.ayada.jstl.core.SetEncoderTag, tagInstanceName: _jsp_SetEncoderTag_28

        // TEXT: lineNumber: 44
        // out.write("\r\n<p>以下的el表达式使用html编码：</p>\r\n<script type=\"text/javascript\">\r\nvar text = \"");
        out.write(_jsp_string_33, 0, _jsp_string_33.length);
        // VARIABLE: lineNumber: 48
        expressionContext.print(out, pageContext.getAttribute("myTextContent"));
        // TEXT: lineNumber: 48
        // out.write("\";\r\nalert(text);\r\n</script>\r\n\r\n<p>以下的el表达式不做任何编码：</p>\r\n");
        out.write(_jsp_string_35, 0, _jsp_string_35.length);

        // NODE START: lineNumber: 53, offset: 35, length: 5, tagClassName: com.skin.ayada.jstl.core.SetEncoderTag, tagInstanceName: _jsp_SetEncoderTag_36
        // <c:setEncoder encoder=\"null\">...</c:setEncoder>
        com.skin.ayada.jstl.core.SetEncoderTag _jsp_SetEncoderTag_36 = new com.skin.ayada.jstl.core.SetEncoderTag();
        try {
            _jsp_SetEncoderTag_36.setPageContext(pageContext);
            _jsp_SetEncoderTag_36.setParent((Tag)null);
            _jsp_SetEncoderTag_36.setEncoder("null");
            int _jsp_start_flag_36 = _jsp_SetEncoderTag_36.doStartTag();

            if(_jsp_start_flag_36 == Tag.SKIP_PAGE) {
                return;
            }
            if(_jsp_start_flag_36 != Tag.SKIP_BODY) {
                int _jsp_flag_36 = 0;

                do {
                // TEXT: lineNumber: 53
                // out.write("<script type=\"text/javascript\">\r\nvar text = \"");
                out.write(_jsp_string_37, 0, _jsp_string_37.length);
                // VARIABLE: lineNumber: 55
                expressionContext.print(out, pageContext.getAttribute("myTextContent"));
                // TEXT: lineNumber: 55
                // out.write("\";\r\nalert(text);\r\n</script>\r\n");
                out.write(_jsp_string_39, 0, _jsp_string_39.length);
                    _jsp_flag_36 = _jsp_SetEncoderTag_36.doAfterBody();
                }
                while(_jsp_flag_36 == IterationTag.EVAL_BODY_AGAIN);
            }
            _jsp_SetEncoderTag_36.doEndTag();
        }
        finally {
            this.doFinally(_jsp_SetEncoderTag_36);
        }
        // NODE END: lineNumber: 53, tagClassName: com.skin.ayada.jstl.core.SetEncoderTag, tagInstanceName: _jsp_SetEncoderTag_36

        // TEXT: lineNumber: 58
        // out.write("\r\n<p>对以下的el表达式转义：</p>\r\n");
        out.write(_jsp_string_41, 0, _jsp_string_41.length);

        // NODE START: lineNumber: 61, offset: 41, length: 5, tagClassName: com.skin.ayada.jstl.core.SetEncoderTag, tagInstanceName: _jsp_SetEncoderTag_42
        // <c:setEncoder encoder=\"code\">...</c:setEncoder>
        com.skin.ayada.jstl.core.SetEncoderTag _jsp_SetEncoderTag_42 = new com.skin.ayada.jstl.core.SetEncoderTag();
        try {
            _jsp_SetEncoderTag_42.setPageContext(pageContext);
            _jsp_SetEncoderTag_42.setParent((Tag)null);
            _jsp_SetEncoderTag_42.setEncoder("code");
            int _jsp_start_flag_42 = _jsp_SetEncoderTag_42.doStartTag();

            if(_jsp_start_flag_42 == Tag.SKIP_PAGE) {
                return;
            }
            if(_jsp_start_flag_42 != Tag.SKIP_BODY) {
                int _jsp_flag_42 = 0;

                do {
                // TEXT: lineNumber: 61
                // out.write("<script type=\"text/javascript\">\r\nvar text = \"");
                out.write(_jsp_string_43, 0, _jsp_string_43.length);
                // VARIABLE: lineNumber: 63
                expressionContext.print(out, pageContext.getAttribute("myTextContent"));
                // TEXT: lineNumber: 63
                // out.write("\";\r\nalert(text);\r\n</script>\r\n");
                out.write(_jsp_string_45, 0, _jsp_string_45.length);
                    _jsp_flag_42 = _jsp_SetEncoderTag_42.doAfterBody();
                }
                while(_jsp_flag_42 == IterationTag.EVAL_BODY_AGAIN);
            }
            _jsp_SetEncoderTag_42.doEndTag();
        }
        finally {
            this.doFinally(_jsp_SetEncoderTag_42);
        }
        // NODE END: lineNumber: 61, tagClassName: com.skin.ayada.jstl.core.SetEncoderTag, tagInstanceName: _jsp_SetEncoderTag_42

        // TEXT: lineNumber: 66
        // out.write("\r\n");
        out.write(_jsp_string_47, 0, _jsp_string_47.length);

        out.flush();
        jspWriter.flush();
    }

    protected static final char[] _jsp_string_3 = "\";\r\nalert(1);\r\n//".toCharArray();
    protected static final char[] _jsp_string_6 = "<script type=\"text/javascript\">\r\n// xss\r\nvar a = \"".toCharArray();
    protected static final char[] _jsp_string_8 = "\";\r\n</script>\r\n\r\n<script type=\"text/javascript\">\r\n// xss filter\r\nvar a = \"".toCharArray();
    protected static final char[] _jsp_string_10 = "\";\r\n</script>\r\n\r\n<x:escape encoder=\"html\">\r\n<p>".toCharArray();
    protected static final char[] _jsp_string_12 = "</p>\r\n</x:escape>\r\n\r\n<x:escape encoder=\"code\">\r\n<script type=\"text/javascript\">\r\nvar a = \"".toCharArray();
    protected static final char[] _jsp_string_14 = "\";\r\n</script>\r\n</x:escape>\r\n\r\n".toCharArray();
    protected static final char[] _jsp_string_16 = "<p>".toCharArray();
    protected static final char[] _jsp_string_18 = "</p>\r\n".toCharArray();
    protected static final char[] _jsp_string_20 = "\r\n<p>定义两个测试数据，这两个数据可能来源于用户输入。</p>\r\n".toCharArray();
    protected static final char[] _jsp_string_22 = "<h1>Hello !</h1>".toCharArray();
    protected static final char[] _jsp_string_25 = "\";\r\n// 下面是注入的代码\r\n// hello\r\n// 发送cookie到指定邮箱\r\nalert(document.cookie);\r\nvar a = \"test hello\r\n".toCharArray();
    protected static final char[] _jsp_string_27 = "\r\n<p>对该标签内的所有el表达式使用html编码：</p>\r\n".toCharArray();
    protected static final char[] _jsp_string_29 = "<p>".toCharArray();
    protected static final char[] _jsp_string_31 = "</p>\r\n".toCharArray();
    protected static final char[] _jsp_string_33 = "\r\n<p>以下的el表达式使用html编码：</p>\r\n<script type=\"text/javascript\">\r\nvar text = \"".toCharArray();
    protected static final char[] _jsp_string_35 = "\";\r\nalert(text);\r\n</script>\r\n\r\n<p>以下的el表达式不做任何编码：</p>\r\n".toCharArray();
    protected static final char[] _jsp_string_37 = "<script type=\"text/javascript\">\r\nvar text = \"".toCharArray();
    protected static final char[] _jsp_string_39 = "\";\r\nalert(text);\r\n</script>\r\n".toCharArray();
    protected static final char[] _jsp_string_41 = "\r\n<p>对以下的el表达式转义：</p>\r\n".toCharArray();
    protected static final char[] _jsp_string_43 = "<script type=\"text/javascript\">\r\nvar text = \"".toCharArray();
    protected static final char[] _jsp_string_45 = "\";\r\nalert(text);\r\n</script>\r\n".toCharArray();
    protected static final char[] _jsp_string_47 = "\r\n".toCharArray();

}
