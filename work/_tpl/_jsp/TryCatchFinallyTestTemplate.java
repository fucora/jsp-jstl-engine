/*
 * $RCSfile: TryCatchFinallyTestTemplate.java,v $$
 * $Revision: 1.1 $
 * $Date: 2017-02-07 $
 *
 * Copyright (C) 2008 Skin, Inc. All rights reserved.
 *
 * This software is the proprietary information of Skin, Inc.
 * Use is subject to license terms.
 *
 * home: E:/WorkSpace/ayada/webapp
 * path: tryCatchFinallyTest.jsp
 * lastModified: 2017-02-07 23:34:43 942
 * options: -fastJstl true
 * template.dependencies
 * -- /tryCatchFinallyTest.jsp
 *
 * JSP generated by JspCompiler-1.0.1.2 (built 2017-02-07 23:35:02 829)
 */
package _tpl._jsp;

import java.io.Writer;
import com.skin.ayada.runtime.ExpressionContext;
import com.skin.ayada.runtime.JspWriter;
import com.skin.ayada.runtime.PageContext;
import com.skin.ayada.tagext.BodyContent;
import com.skin.ayada.tagext.BodyTag;
import com.skin.ayada.tagext.IterationTag;
import com.skin.ayada.tagext.JspFragment;
import com.skin.ayada.tagext.Tag;
import com.skin.ayada.template.JspTemplate;
import com.skin.ayada.util.ExpressionUtil;


/**
 * <p>Title: TryCatchFinallyTestTemplate</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2006</p>
 * @author JspCompiler
 * @version 1.0
 */
@SuppressWarnings("unused")
public class TryCatchFinallyTestTemplate extends JspTemplate {
    /**
     * @param args
     */
    public static void main(String[] args){
        java.io.StringWriter writer = new java.io.StringWriter();
        PageContext pageContext = com.skin.ayada.runtime.JspFactory.getPageContext(writer);
        TryCatchFinallyTestTemplate template = new TryCatchFinallyTestTemplate();

        try {
            template.execute(pageContext);
            System.out.println(writer.toString());
        }
        catch(Throwable throwable) {
            throwable.printStackTrace();
        }
    }

    /**
     * @param pageContext
     * @throws Throwable
     */
    @Override
    @SuppressWarnings("unchecked")
    public void _execute(final PageContext pageContext) throws Throwable {
        JspWriter out = pageContext.getOut();
        JspWriter jspWriter = pageContext.getOut();
        ExpressionContext expressionContext = pageContext.getExpressionContext();
        // jsp:directive.page: lineNumber: 1
        // <jsp:directive.page contentType="text/html; charset=UTF-8" buffer="8192" autoFlush="true"/>

        // NODE START: lineNumber: 2, offset: 2, length: 2, tagClassName: com.skin.ayada.jstl.core.ExecuteTag, tagInstanceName: _jsp_ExecuteTag_3
        // <c:execute value=\"${pageContext.getOut().setBufferSize(4096)}\"/>
        ExpressionUtil.evaluate(expressionContext, "${pageContext.getOut().setBufferSize(4096)}", null);
        // jsp.jstl.core.ExecuteTag END
        // NODE END: lineNumber: 2, tagClassName: com.skin.ayada.jstl.core.ExecuteTag, tagInstanceName: _jsp_ExecuteTag_3

        // NODE START: lineNumber: 3, offset: 4, length: 2, tagClassName: com.skin.ayada.jstl.core.ExecuteTag, tagInstanceName: _jsp_ExecuteTag_5
        // <c:execute value=\"${pageContext.getOut().setAutoFlush(true)}\"/>
        ExpressionUtil.evaluate(expressionContext, "${pageContext.getOut().setAutoFlush(true)}", null);
        // jsp.jstl.core.ExecuteTag END
        // NODE END: lineNumber: 3, tagClassName: com.skin.ayada.jstl.core.ExecuteTag, tagInstanceName: _jsp_ExecuteTag_5

        // TEXT: lineNumber: 3
        // out.write("<!--\r\n功能测试\r\n    该测试仅针对解释模式， 编译模式不会存在这个问题。\r\n    测试项目:\r\n        1. 当Tag的doStartTag或者doEndTag返回Tag.SKIP_PAGE时, 父Tag如果是TryCatchFinally标签, 是否能够执行父Tag的doFinally\r\n        2. 如果父Tag的doFinally方法在执行的时候抛出了异常，那么整个执行过程是否能够正常终止。\r\n        3. 如果父Tag的doFinally方法在执行的时候抛出了异常，显示出来的错误信息是否正确。错误信息应该定位到TryCatchFinally标签上，而不应该定位到返回Tag.SKIP_PAGE的标签上。\r\n-->\r\n");
        out.write(_jsp_string_7, 0, _jsp_string_7.length);

        // NODE START: lineNumber: 12, offset: 7, length: 8, tagClassName: com.skin.ayada.jstl.core.TryCatchTestTag, tagInstanceName: _jsp_TryCatchTestTag_8
        // <c:tryCatchTest name=\"tc1\" exception=\"doFinally\">...</c:tryCatchTest>
        com.skin.ayada.jstl.core.TryCatchTestTag _jsp_TryCatchTestTag_8 = new com.skin.ayada.jstl.core.TryCatchTestTag();
        try {
            _jsp_TryCatchTestTag_8.setPageContext(pageContext);
            _jsp_TryCatchTestTag_8.setParent((Tag)null);
            _jsp_TryCatchTestTag_8.setName("tc1");
            _jsp_TryCatchTestTag_8.setException("doFinally");
            int _jsp_start_flag_8 = _jsp_TryCatchTestTag_8.doStartTag();

            if(_jsp_start_flag_8 == Tag.SKIP_PAGE) {
                return;
            }
            if(_jsp_start_flag_8 != Tag.SKIP_BODY) {
                int _jsp_flag_8 = 0;

                do {
                    // NODE START: lineNumber: 13, offset: 8, length: 6, tagClassName: com.skin.ayada.jstl.core.TryCatchTestTag, tagInstanceName: _jsp_TryCatchTestTag_9
                    // <c:tryCatchTest name=\"tc2\" exception=\"doFinally\">...</c:tryCatchTest>
                    com.skin.ayada.jstl.core.TryCatchTestTag _jsp_TryCatchTestTag_9 = new com.skin.ayada.jstl.core.TryCatchTestTag();
                    try {
                        _jsp_TryCatchTestTag_9.setPageContext(pageContext);
                        _jsp_TryCatchTestTag_9.setParent(_jsp_TryCatchTestTag_8);
                        _jsp_TryCatchTestTag_9.setName("tc2");
                        _jsp_TryCatchTestTag_9.setException("doFinally");
                        int _jsp_start_flag_9 = _jsp_TryCatchTestTag_9.doStartTag();

                        if(_jsp_start_flag_9 == Tag.SKIP_PAGE) {
                            return;
                        }
                        if(_jsp_start_flag_9 != Tag.SKIP_BODY) {
                            int _jsp_flag_9 = 0;

                            do {
                                // NODE START: lineNumber: 14, offset: 9, length: 4, tagClassName: com.skin.ayada.jstl.core.TryCatchTestTag, tagInstanceName: _jsp_TryCatchTestTag_10
                                // <c:tryCatchTest name=\"tc3\" exception=\"doStartTag\">...</c:tryCatchTest>
                                com.skin.ayada.jstl.core.TryCatchTestTag _jsp_TryCatchTestTag_10 = new com.skin.ayada.jstl.core.TryCatchTestTag();
                                try {
                                    _jsp_TryCatchTestTag_10.setPageContext(pageContext);
                                    _jsp_TryCatchTestTag_10.setParent(_jsp_TryCatchTestTag_9);
                                    _jsp_TryCatchTestTag_10.setName("tc3");
                                    _jsp_TryCatchTestTag_10.setException("doStartTag");
                                    int _jsp_start_flag_10 = _jsp_TryCatchTestTag_10.doStartTag();

                                    if(_jsp_start_flag_10 == Tag.SKIP_PAGE) {
                                        return;
                                    }
                                    if(_jsp_start_flag_10 != Tag.SKIP_BODY) {
                                        int _jsp_flag_10 = 0;

                                        do {
                                            // NODE START: lineNumber: 15, offset: 10, length: 2, tagClassName: com.skin.ayada.jstl.core.ExitTag, tagInstanceName: _jsp_ExitTag_11
                                            // <c:exit/>
                                            if(com.skin.ayada.jstl.core.ContinueTag.getTrue()) {
                                                return;
                                            }
                                            // jsp.jstl.core.ExitTag END
                                            // NODE END: lineNumber: 15, tagClassName: com.skin.ayada.jstl.core.ExitTag, tagInstanceName: _jsp_ExitTag_11

                                            _jsp_flag_10 = _jsp_TryCatchTestTag_10.doAfterBody();
                                        }
                                        while(_jsp_flag_10 == IterationTag.EVAL_BODY_AGAIN);
                                    }
                                    _jsp_TryCatchTestTag_10.doEndTag();
                                }
                                catch(Throwable throwable) {
                                    this.doCatch(_jsp_TryCatchTestTag_10, throwable);
                                }
                                finally {
                                    this.doFinally(_jsp_TryCatchTestTag_10);
                                }
                                // NODE END: lineNumber: 14, tagClassName: com.skin.ayada.jstl.core.TryCatchTestTag, tagInstanceName: _jsp_TryCatchTestTag_10

                                _jsp_flag_9 = _jsp_TryCatchTestTag_9.doAfterBody();
                            }
                            while(_jsp_flag_9 == IterationTag.EVAL_BODY_AGAIN);
                        }
                        _jsp_TryCatchTestTag_9.doEndTag();
                    }
                    catch(Throwable throwable) {
                        this.doCatch(_jsp_TryCatchTestTag_9, throwable);
                    }
                    finally {
                        this.doFinally(_jsp_TryCatchTestTag_9);
                    }
                    // NODE END: lineNumber: 13, tagClassName: com.skin.ayada.jstl.core.TryCatchTestTag, tagInstanceName: _jsp_TryCatchTestTag_9

                    _jsp_flag_8 = _jsp_TryCatchTestTag_8.doAfterBody();
                }
                while(_jsp_flag_8 == IterationTag.EVAL_BODY_AGAIN);
            }
            _jsp_TryCatchTestTag_8.doEndTag();
        }
        catch(Throwable throwable) {
            this.doCatch(_jsp_TryCatchTestTag_8, throwable);
        }
        finally {
            this.doFinally(_jsp_TryCatchTestTag_8);
        }
        // NODE END: lineNumber: 12, tagClassName: com.skin.ayada.jstl.core.TryCatchTestTag, tagInstanceName: _jsp_TryCatchTestTag_8


        out.flush();
        jspWriter.flush();
    }

    protected static final char[] _jsp_string_7 = "<!--\r\n功能测试\r\n    该测试仅针对解释模式， 编译模式不会存在这个问题。\r\n    测试项目:\r\n        1. 当Tag的doStartTag或者doEndTag返回Tag.SKIP_PAGE时, 父Tag如果是TryCatchFinally标签, 是否能够执行父Tag的doFinally\r\n        2. 如果父Tag的doFinally方法在执行的时候抛出了异常，那么整个执行过程是否能够正常终止。\r\n        3. 如果父Tag的doFinally方法在执行的时候抛出了异常，显示出来的错误信息是否正确。错误信息应该定位到TryCatchFinally标签上，而不应该定位到返回Tag.SKIP_PAGE的标签上。\r\n-->\r\n".toCharArray();

}
