/*
 * $RCSfile: SqlParserTest1Template.java,v $$
 * $Revision: 1.1 $
 * $Date: 2017-02-07 $
 *
 * Copyright (C) 2008 Skin, Inc. All rights reserved.
 *
 * This software is the proprietary information of Skin, Inc.
 * Use is subject to license terms.
 *
 * home: E:/WorkSpace/ayada/webapp
 * path: /sqlParserTest1.jsp
 * lastModified: 2016-06-17 13:36:12 000
 * options: -fastJstl true
 * template.dependencies
 * -- /sqlParserTest1.jsp
 *
 * JSP generated by JspCompiler-1.0.1.2 (built 2017-02-07 20:41:29 806)
 */
package _tpl._jsp;

import java.io.Writer;
import com.skin.ayada.runtime.ExpressionContext;
import com.skin.ayada.runtime.JspWriter;
import com.skin.ayada.runtime.PageContext;
import com.skin.ayada.tagext.BodyContent;
import com.skin.ayada.tagext.BodyTag;
import com.skin.ayada.tagext.IterationTag;
import com.skin.ayada.tagext.JspFragment;
import com.skin.ayada.tagext.Tag;
import com.skin.ayada.template.JspTemplate;
import com.skin.ayada.util.ExpressionUtil;


/**
 * <p>Title: SqlParserTest1Template</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2006</p>
 * @author JspCompiler
 * @version 1.0
 */
@SuppressWarnings("unused")
public class SqlParserTest1Template extends JspTemplate {
    /**
     * @param args
     */
    public static void main(String[] args){
        java.io.StringWriter writer = new java.io.StringWriter();
        PageContext pageContext = com.skin.ayada.runtime.JspFactory.getPageContext(writer);
        SqlParserTest1Template template = new SqlParserTest1Template();

        try {
            template.execute(pageContext);
            System.out.println(writer.toString());
        }
        catch(Throwable throwable) {
            throwable.printStackTrace();
        }
    }

    /**
     * @param pageContext
     * @throws Throwable
     */
    @Override
    @SuppressWarnings("unchecked")
    public void _execute(final PageContext pageContext) throws Throwable {
        JspWriter out = pageContext.getOut();
        JspWriter jspWriter = pageContext.getOut();
        ExpressionContext expressionContext = pageContext.getExpressionContext();
        // NODE START: lineNumber: 1, offset: 0, length: 3, tagClassName: com.skin.ayada.jstl.sql.CreateParseTag, tagInstanceName: _jsp_CreateParseTag_1
        // <sql:parse name=\"tableList\">...</sql:parse>
        com.skin.ayada.jstl.sql.CreateParseTag _jsp_CreateParseTag_1 = new com.skin.ayada.jstl.sql.CreateParseTag();
        try {
            _jsp_CreateParseTag_1.setPageContext(pageContext);
            _jsp_CreateParseTag_1.setParent((Tag)null);
            _jsp_CreateParseTag_1.setName("tableList");
            int _jsp_start_flag_1 = _jsp_CreateParseTag_1.doStartTag();

            if(_jsp_start_flag_1 == Tag.SKIP_PAGE) {
                return;
            }
            if(_jsp_start_flag_1 != Tag.SKIP_BODY) {
                int _jsp_flag_1 = 0;
                if(_jsp_start_flag_1 == BodyTag.EVAL_BODY_BUFFERED) {
                    BodyContent _jsp_body_content_1 = pageContext.pushBody();
                    _jsp_CreateParseTag_1.setBodyContent(_jsp_body_content_1);
                    _jsp_CreateParseTag_1.doInitBody();
                    out = _jsp_body_content_1;
                }

                do {
                // TEXT: lineNumber: 1
                // out.write("create table `my_table`(\r\n    `f1`      bigint(20) unsigned not null comment '主键',\r\n    `f2`      datetime not null comment '注释',\r\n    `f3`      datetime not null comment '注释',\r\n    primary key (f1)\r\n);\r\n");
                out.write(_jsp_string_2, 0, _jsp_string_2.length);
                    _jsp_flag_1 = _jsp_CreateParseTag_1.doAfterBody();
                }
                while(_jsp_flag_1 == IterationTag.EVAL_BODY_AGAIN);
                if(_jsp_start_flag_1 == BodyTag.EVAL_BODY_BUFFERED) {
                    out = pageContext.popBody();
                }
            }
            _jsp_CreateParseTag_1.doEndTag();
        }
        finally {
            this.doFinally(_jsp_CreateParseTag_1);
        }
        // NODE END: lineNumber: 1, tagClassName: com.skin.ayada.jstl.sql.CreateParseTag, tagInstanceName: _jsp_CreateParseTag_1

        // TEXT: lineNumber: 8
        // out.write("\r\n");
        out.write(_jsp_string_4, 0, _jsp_string_4.length);

        // NODE START: lineNumber: 10, offset: 4, length: 17, tagClassName: com.skin.ayada.jstl.core.ForEachTag, tagInstanceName: _jsp_ForEachTag_5
        // <c:forEach items=\"${tableList}\" var=\"table\">...</c:forEach>
        Object _jsp_old_var_5 = pageContext.getAttribute("table");
        com.skin.ayada.jstl.core.ForEachTag _jsp_ForEachTag_5 = new com.skin.ayada.jstl.core.ForEachTag();
        _jsp_ForEachTag_5.setParent((Tag)null);
        _jsp_ForEachTag_5.setPageContext(pageContext);
        _jsp_ForEachTag_5.setVar("table");
        _jsp_ForEachTag_5.setItems(pageContext.getAttribute("tableList"));
        if(_jsp_ForEachTag_5.doStartTag() != Tag.SKIP_BODY) {
            while(true) {
                // TEXT: lineNumber: 10
                // out.write("<p>table: ");
                out.write(_jsp_string_6, 0, _jsp_string_6.length);
                // EXPRESSION: lineNumber: 11
                expressionContext.print(out, expressionContext.getString("table.tableName"));
                // TEXT: lineNumber: 11
                // out.write("</p>\r\n");
                out.write(_jsp_string_8, 0, _jsp_string_8.length);

                // NODE START: lineNumber: 12, offset: 8, length: 2, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_9
                // <c:out value=\"${table.getCreateString(&#39;`%s`&#39;)}\"/>
                com.skin.ayada.jstl.core.OutTag.write(out, ExpressionUtil.evaluate(expressionContext, "${table.getCreateString('`%s`')}", null), false);
                // out.print(ExpressionUtil.getString(expressionContext, "${table.getCreateString('`%s`')}"));
                // jsp.jstl.core.OutTag END
                // NODE END: lineNumber: 12, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_9

                // TEXT: lineNumber: 12
                // out.write("\r\n");
                out.write(_jsp_string_11, 0, _jsp_string_11.length);

                // NODE START: lineNumber: 13, offset: 11, length: 2, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_12
                // <c:out value=\"${table.getQueryString()}\"/>
                com.skin.ayada.jstl.core.OutTag.write(out, ExpressionUtil.evaluate(expressionContext, "${table.getQueryString()}", null), false);
                // out.print(ExpressionUtil.getString(expressionContext, "${table.getQueryString()}"));
                // jsp.jstl.core.OutTag END
                // NODE END: lineNumber: 13, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_12

                // TEXT: lineNumber: 13
                // out.write("\r\n");
                out.write(_jsp_string_14, 0, _jsp_string_14.length);

                // NODE START: lineNumber: 14, offset: 14, length: 2, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_15
                // <c:out value=\"${table.getInsertString()}\"/>
                com.skin.ayada.jstl.core.OutTag.write(out, ExpressionUtil.evaluate(expressionContext, "${table.getInsertString()}", null), false);
                // out.print(ExpressionUtil.getString(expressionContext, "${table.getInsertString()}"));
                // jsp.jstl.core.OutTag END
                // NODE END: lineNumber: 14, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_15

                // TEXT: lineNumber: 14
                // out.write("\r\n");
                out.write(_jsp_string_17, 0, _jsp_string_17.length);

                // NODE START: lineNumber: 15, offset: 17, length: 2, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_18
                // <c:out value=\"${table.getUpdateString()}\"/>
                com.skin.ayada.jstl.core.OutTag.write(out, ExpressionUtil.evaluate(expressionContext, "${table.getUpdateString()}", null), false);
                // out.print(ExpressionUtil.getString(expressionContext, "${table.getUpdateString()}"));
                // jsp.jstl.core.OutTag END
                // NODE END: lineNumber: 15, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_18

                // TEXT: lineNumber: 15
                // out.write("\r\n");
                out.write(_jsp_string_20, 0, _jsp_string_20.length);
                if(_jsp_ForEachTag_5.doAfterBody() != IterationTag.EVAL_BODY_AGAIN) {
                    break;
                }
            }
        }
        _jsp_ForEachTag_5.release();
        pageContext.setAttribute("table", _jsp_old_var_5);
        // jsp.jstl.core.ForEachTag END
        // NODE END: lineNumber: 10, tagClassName: com.skin.ayada.jstl.core.ForEachTag, tagInstanceName: _jsp_ForEachTag_5


        out.flush();
        jspWriter.flush();
    }

    protected static final char[] _jsp_string_2 = "create table `my_table`(\r\n    `f1`      bigint(20) unsigned not null comment '主键',\r\n    `f2`      datetime not null comment '注释',\r\n    `f3`      datetime not null comment '注释',\r\n    primary key (f1)\r\n);\r\n".toCharArray();
    protected static final char[] _jsp_string_4 = "\r\n".toCharArray();
    protected static final char[] _jsp_string_6 = "<p>table: ".toCharArray();
    protected static final char[] _jsp_string_8 = "</p>\r\n".toCharArray();
    protected static final char[] _jsp_string_11 = "\r\n".toCharArray();
    protected static final char[] _jsp_string_14 = "\r\n".toCharArray();
    protected static final char[] _jsp_string_17 = "\r\n".toCharArray();
    protected static final char[] _jsp_string_20 = "\r\n".toCharArray();

}
