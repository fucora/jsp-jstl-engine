/*
 * $RCSfile: TextTestTemplate.java,v $$
 * $Revision: 1.1 $
 * $Date: 2016-01-08 $
 *
 * Copyright (C) 2008 Skin, Inc. All rights reserved.
 *
 * This software is the proprietary information of Skin, Inc.
 * Use is subject to license terms.
 *
 * home: E:/WorkSpace/ayada/webapp
 * path: /textTest.jsp
 * lastModified: 2016-01-05 11:27:08 000
 * options: -fastJstl true
 * JSP generated by JspCompiler-1.0.1.2 (built 2016-01-08 22:06:58 549)
 */
package _tpl._jsp;

import java.io.Writer;
import com.skin.ayada.runtime.ExpressionContext;
import com.skin.ayada.runtime.JspWriter;
import com.skin.ayada.runtime.PageContext;
import com.skin.ayada.tagext.BodyContent;
import com.skin.ayada.tagext.BodyTag;
import com.skin.ayada.tagext.IterationTag;
import com.skin.ayada.tagext.JspFragment;
import com.skin.ayada.tagext.Tag;
import com.skin.ayada.template.JspTemplate;
import com.skin.ayada.util.ExpressionUtil;


/**
 * <p>Title: TextTestTemplate</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2006</p>
 * @author JspCompiler
 * @version 1.0
 */
@SuppressWarnings("unused")
public class TextTestTemplate extends JspTemplate {
    public static void main(String[] args){
        java.io.StringWriter writer = new java.io.StringWriter();
        PageContext pageContext = com.skin.ayada.runtime.JspFactory.getPageContext(writer);
        TextTestTemplate template = new TextTestTemplate();

        try {
            template.execute(pageContext);
            System.out.println(writer.toString());
        }
        catch(Throwable throwable) {
            throwable.printStackTrace();
        }
    }

    /**
     * @param pageContext
     * @throws Throwable
     */
    @Override
    @SuppressWarnings("unchecked")
    public void _execute(final PageContext pageContext) throws Throwable {
        JspWriter out = pageContext.getOut();
        JspWriter jspWriter = pageContext.getOut();
        ExpressionContext expressionContext = pageContext.getExpressionContext();
        // TEXT: lineNumber: 1
        // out.write("<h1>文本转义</h1>\r\n<p>文本转义的方式有两种:</p>\r\n\r\n<p>文本转义: 第一种方式 - 编译期根据escape把内容进行编码</p>\r\n<textarea id=\"mytpl\">\r\n    &lt;div&gt;&lt;c:if test=&quot;${1 == 1}&quot;&gt;test&lt;/c:if&gt;&lt;/div&gt;\r\n</textarea>\r\n\r\n<p>文本转义: 第二种方式 - 运行期转义</p>\r\n<textarea id=\"mytpl\">\r\n    ");
        out.write(_jsp_string_1, 0, _jsp_string_1.length);

        // NODE START: lineNumber: 13, offset: 1, length: 3, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_2
        // <c:out escapeXml=\"true\">...</c:out>
        out = pageContext.pushBody();
        // TEXT: lineNumber: 13
        // out.write("\r\n                    <div><c:if test=\"${1 == 1}\">test</c:if></div>\r\n            ");
        out.write(_jsp_string_3, 0, _jsp_string_3.length);
        pageContext.print((BodyContent)out, true);
        out = pageContext.popBody();
        // jsp.jstl.core.OutTag END
        // NODE END: lineNumber: 13, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_2

        // TEXT: lineNumber: 17
        // out.write("\r\n</textarea>\r\n<p>上面的两种方式执行结果是一样的，但是第一种方式更好一些，第一种方式是在编译期进行转义，只需要转义一次。</p>\r\n<p>第二种方式每次执行的时候都会执行一次转义。</p>\r\n<p>两种方式都只能是静态文本</p>\r\n\r\nt:text标签是编译指令，在编译期其中的任何内容都会被当作文本处理，包括标签和java脚本，并且内容中不允许包含&lt;/t:text&gt;\r\n这个标签是专门为使用了js模板设计的, 例如:\r\n<textarea id=\"mytpl\">\r\n    &lt;div&gt;&lt;c:if test=&quot;${1 == 1}&quot;&gt;test&lt;/c:if&gt;&lt;/div&gt;\r\n</textarea>\r\n\r\n<script type=\"text/javascript\">\r\nfunction getTemplate(id){\r\n    return document.getElementById(id).value;\r\n}\r\n</script>\r\n");
        out.write(_jsp_string_5, 0, _jsp_string_5.length);

        out.flush();
        jspWriter.flush();
    }

    public static final char[] _jsp_string_1 = "<h1>文本转义</h1>\r\n<p>文本转义的方式有两种:</p>\r\n\r\n<p>文本转义: 第一种方式 - 编译期根据escape把内容进行编码</p>\r\n<textarea id=\"mytpl\">\r\n    &lt;div&gt;&lt;c:if test=&quot;${1 == 1}&quot;&gt;test&lt;/c:if&gt;&lt;/div&gt;\r\n</textarea>\r\n\r\n<p>文本转义: 第二种方式 - 运行期转义</p>\r\n<textarea id=\"mytpl\">\r\n    ".toCharArray();
    public static final char[] _jsp_string_3 = "\r\n                    <div><c:if test=\"${1 == 1}\">test</c:if></div>\r\n            ".toCharArray();
    public static final char[] _jsp_string_5 = "\r\n</textarea>\r\n<p>上面的两种方式执行结果是一样的，但是第一种方式更好一些，第一种方式是在编译期进行转义，只需要转义一次。</p>\r\n<p>第二种方式每次执行的时候都会执行一次转义。</p>\r\n<p>两种方式都只能是静态文本</p>\r\n\r\nt:text标签是编译指令，在编译期其中的任何内容都会被当作文本处理，包括标签和java脚本，并且内容中不允许包含&lt;/t:text&gt;\r\n这个标签是专门为使用了js模板设计的, 例如:\r\n<textarea id=\"mytpl\">\r\n    &lt;div&gt;&lt;c:if test=&quot;${1 == 1}&quot;&gt;test&lt;/c:if&gt;&lt;/div&gt;\r\n</textarea>\r\n\r\n<script type=\"text/javascript\">\r\nfunction getTemplate(id){\r\n    return document.getElementById(id).value;\r\n}\r\n</script>\r\n".toCharArray();

}
