/*
 * $RCSfile: CommandTemplate.java,v $$
 * $Revision: 1.1 $
 * $Date: 2016-01-08 $
 *
 * Copyright (C) 2008 Skin, Inc. All rights reserved.
 *
 * This software is the proprietary information of Skin, Inc.
 * Use is subject to license terms.
 *
 * home: E:/WorkSpace/ayada/webapp
 * path: /command.jsp
 * lastModified: 2014-05-27 11:37:50 000
 * options: -fastJstl true
 * JSP generated by JspCompiler-1.0.1.2 (built 2016-01-08 22:06:46 236)
 */
package _tpl._jsp;

import java.io.Writer;
import com.skin.ayada.runtime.ExpressionContext;
import com.skin.ayada.runtime.JspWriter;
import com.skin.ayada.runtime.PageContext;
import com.skin.ayada.tagext.BodyContent;
import com.skin.ayada.tagext.BodyTag;
import com.skin.ayada.tagext.IterationTag;
import com.skin.ayada.tagext.JspFragment;
import com.skin.ayada.tagext.Tag;
import com.skin.ayada.template.JspTemplate;
import com.skin.ayada.util.ExpressionUtil;


/**
 * <p>Title: CommandTemplate</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2006</p>
 * @author JspCompiler
 * @version 1.0
 */
@SuppressWarnings("unused")
public class CommandTemplate extends JspTemplate {
    public static void main(String[] args){
        java.io.StringWriter writer = new java.io.StringWriter();
        PageContext pageContext = com.skin.ayada.runtime.JspFactory.getPageContext(writer);
        CommandTemplate template = new CommandTemplate();

        try {
            template.execute(pageContext);
            System.out.println(writer.toString());
        }
        catch(Throwable throwable) {
            throwable.printStackTrace();
        }
    }

    /**
     * @param pageContext
     * @throws Throwable
     */
    @Override
    @SuppressWarnings("unchecked")
    public void _execute(final PageContext pageContext) throws Throwable {
        JspWriter out = pageContext.getOut();
        JspWriter jspWriter = pageContext.getOut();
        ExpressionContext expressionContext = pageContext.getExpressionContext();
        // jsp:directive.page: lineNumber: 1
        // <jsp:directive.page contentType="text/html; charset=UTF-8"/>

        // TEXT: lineNumber: 2
        // out.write("<!--\r\nt:import: 编译指令\r\n1. 可以放在任何位置, 但必须在使用之前引入\r\n2. 如果多次引入同一个tag, tag的bodyContent以最后一次引入的为准, 引擎在编译结束之后才会根据bodyContent的类型做一次紧缩处理\r\n   bodyContent: jsp|tagdependent|empty\r\n   如果是tagdependent, 那么该tag内部的所有文本节点和表达式节点都会被清除, 其子节点的内容不会清除(但是会根据子节点的bodyContent决定是否清除)\r\n   如果是empty, 那么内部的任何节点都会被清除\r\n   如果是jsp, 则保持现有内容不变\r\n   因此所有的引入操作最好放在文件头, 并且对同一个tag只引入一次\r\n\r\n3. className不是必选项, 可以为空, 如果为空则使用ayada-taglib-default.xml或者ayada-taglib.xml文件中配置的className, 因此下面的两种写法都是合法的\r\n        4. bodyContent和description都不是必选项, 可以为空, bodyContent默认为jsp\r\n-->\r\n<h1>tag.bodyContent</h1>\r\n<p>1. jsp: any content</p>\r\n<p>2. tagdependent: tag only</p>\r\n<p>3. empty: ignore any content</p>\r\n\r\n<!-- 使用重新定义的c:if标签, 该标签内部的所有文本内容在编译期都会被清除, 但是自标签的文本仍然可以输出 -->\r\n");
        out.write(_jsp_string_3, 0, _jsp_string_3.length);

        // NODE START: lineNumber: 27, offset: 3, length: 5, tagClassName: com.skin.ayada.jstl.core.IfTag, tagInstanceName: _jsp_IfTag_4
        // <c:if test=\"${1 == 1}\">...</c:if>
        if(ExpressionUtil.getBoolean(expressionContext, "${1 == 1}")) {
            // NODE START: lineNumber: 29, offset: 4, length: 3, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_5
            // <c:out escapeXml=\"true\">...</c:out>
            out = pageContext.pushBody();
            // TEXT: lineNumber: 29
            // out.write("\"I\'m here !\"");
            out.write(_jsp_string_6, 0, _jsp_string_6.length);
            pageContext.print((BodyContent)out, true);
            out = pageContext.popBody();
            // jsp.jstl.core.OutTag END
            // NODE END: lineNumber: 29, tagClassName: com.skin.ayada.jstl.core.OutTag, tagInstanceName: _jsp_OutTag_5

        } // jsp.jstl.core.IfTag END
        // NODE END: lineNumber: 27, tagClassName: com.skin.ayada.jstl.core.IfTag, tagInstanceName: _jsp_IfTag_4

        // TEXT: lineNumber: 30
        // out.write("\r\n\r\n<!-- c:command的bodyContent被定义为tagdependent，因此内部的文本内容都会被忽略。-->\r\n");
        out.write(_jsp_string_9, 0, _jsp_string_9.length);

        // NODE START: lineNumber: 33, offset: 9, length: 16, tagClassName: com.skin.ayada.jstl.core.DependentTag, tagInstanceName: _jsp_DependentTag_10
        // <c:command>...</c:command>
        com.skin.ayada.jstl.core.DependentTag _jsp_DependentTag_10 = new com.skin.ayada.jstl.core.DependentTag();
        _jsp_DependentTag_10.setPageContext(pageContext);
        _jsp_DependentTag_10.setParent((Tag)null);
        int _jsp_start_flag_10 = _jsp_DependentTag_10.doStartTag();

        if(_jsp_start_flag_10 == Tag.SKIP_PAGE) {
            return;
        }
        if(_jsp_start_flag_10 != Tag.SKIP_BODY) {
            int _jsp_flag_10 = 0;

            do {
                // NODE START: lineNumber: 35, offset: 10, length: 14, tagClassName: com.skin.ayada.jstl.core.IfTag, tagInstanceName: _jsp_IfTag_11
                // <c:if test=\"${1 == 2}\">...</c:if>
                if(ExpressionUtil.getBoolean(expressionContext, "${1 == 2}")) {
                    // NODE START: lineNumber: 36, offset: 11, length: 2, tagClassName: com.skin.ayada.jstl.io.CopyTag, tagInstanceName: _jsp_CopyTag_12
                    // <io:copy file=\"E:/WorkSpace/ayada/webapp/test1\" todir=\"E:/WorkSpace/ayada/webapp/test2\"/>
                    com.skin.ayada.jstl.io.CopyTag _jsp_CopyTag_12 = new com.skin.ayada.jstl.io.CopyTag();
                    _jsp_CopyTag_12.setPageContext(pageContext);
                    _jsp_CopyTag_12.setParent((Tag)null);
                    _jsp_CopyTag_12.setFile("E:/WorkSpace/ayada/webapp/test1");
                    _jsp_CopyTag_12.setTodir("E:/WorkSpace/ayada/webapp/test2");
                    int _jsp_start_flag_12 = _jsp_CopyTag_12.doStartTag();

                    if(_jsp_start_flag_12 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_12 != Tag.SKIP_BODY) {
                        _jsp_CopyTag_12.doAfterBody();
                    }
                    _jsp_CopyTag_12.doEndTag();
                    _jsp_CopyTag_12.release();
                    // NODE END: lineNumber: 36, tagClassName: com.skin.ayada.jstl.io.CopyTag, tagInstanceName: _jsp_CopyTag_12

                    // NODE START: lineNumber: 37, offset: 13, length: 2, tagClassName: com.skin.ayada.jstl.io.DeleteTag, tagInstanceName: _jsp_DeleteTag_14
                    // <io:delete file=\"E:/WorkSpace/ayada/webapp/test2/style.css\"/>
                    com.skin.ayada.jstl.io.DeleteTag _jsp_DeleteTag_14 = new com.skin.ayada.jstl.io.DeleteTag();
                    _jsp_DeleteTag_14.setPageContext(pageContext);
                    _jsp_DeleteTag_14.setParent((Tag)null);
                    _jsp_DeleteTag_14.setFile("E:/WorkSpace/ayada/webapp/test2/style.css");
                    int _jsp_start_flag_14 = _jsp_DeleteTag_14.doStartTag();

                    if(_jsp_start_flag_14 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_14 != Tag.SKIP_BODY) {
                        _jsp_DeleteTag_14.doAfterBody();
                    }
                    _jsp_DeleteTag_14.doEndTag();
                    _jsp_DeleteTag_14.release();
                    // NODE END: lineNumber: 37, tagClassName: com.skin.ayada.jstl.io.DeleteTag, tagInstanceName: _jsp_DeleteTag_14

                    // NODE START: lineNumber: 38, offset: 15, length: 2, tagClassName: com.skin.ayada.jstl.io.MakeDirTag, tagInstanceName: _jsp_MakeDirTag_16
                    // <io:mkdir file=\"E:/WorkSpace/ayada/webapp/test2/empty1\"/>
                    com.skin.ayada.jstl.io.MakeDirTag _jsp_MakeDirTag_16 = new com.skin.ayada.jstl.io.MakeDirTag();
                    _jsp_MakeDirTag_16.setPageContext(pageContext);
                    _jsp_MakeDirTag_16.setParent((Tag)null);
                    _jsp_MakeDirTag_16.setFile("E:/WorkSpace/ayada/webapp/test2/empty1");
                    int _jsp_start_flag_16 = _jsp_MakeDirTag_16.doStartTag();

                    if(_jsp_start_flag_16 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_16 != Tag.SKIP_BODY) {
                        _jsp_MakeDirTag_16.doAfterBody();
                    }
                    _jsp_MakeDirTag_16.doEndTag();
                    _jsp_MakeDirTag_16.release();
                    // NODE END: lineNumber: 38, tagClassName: com.skin.ayada.jstl.io.MakeDirTag, tagInstanceName: _jsp_MakeDirTag_16

                    // NODE START: lineNumber: 39, offset: 17, length: 2, tagClassName: com.skin.ayada.jstl.io.MakeDirTag, tagInstanceName: _jsp_MakeDirTag_18
                    // <io:mkdir file=\"E:/WorkSpace/ayada/webapp/test2/empty2\"/>
                    com.skin.ayada.jstl.io.MakeDirTag _jsp_MakeDirTag_18 = new com.skin.ayada.jstl.io.MakeDirTag();
                    _jsp_MakeDirTag_18.setPageContext(pageContext);
                    _jsp_MakeDirTag_18.setParent((Tag)null);
                    _jsp_MakeDirTag_18.setFile("E:/WorkSpace/ayada/webapp/test2/empty2");
                    int _jsp_start_flag_18 = _jsp_MakeDirTag_18.doStartTag();

                    if(_jsp_start_flag_18 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_18 != Tag.SKIP_BODY) {
                        _jsp_MakeDirTag_18.doAfterBody();
                    }
                    _jsp_MakeDirTag_18.doEndTag();
                    _jsp_MakeDirTag_18.release();
                    // NODE END: lineNumber: 39, tagClassName: com.skin.ayada.jstl.io.MakeDirTag, tagInstanceName: _jsp_MakeDirTag_18

                    // NODE START: lineNumber: 40, offset: 19, length: 2, tagClassName: com.skin.ayada.jstl.io.DeleteTag, tagInstanceName: _jsp_DeleteTag_20
                    // <io:delete file=\"E:/WorkSpace/ayada/webapp/test2/empty2\"/>
                    com.skin.ayada.jstl.io.DeleteTag _jsp_DeleteTag_20 = new com.skin.ayada.jstl.io.DeleteTag();
                    _jsp_DeleteTag_20.setPageContext(pageContext);
                    _jsp_DeleteTag_20.setParent((Tag)null);
                    _jsp_DeleteTag_20.setFile("E:/WorkSpace/ayada/webapp/test2/empty2");
                    int _jsp_start_flag_20 = _jsp_DeleteTag_20.doStartTag();

                    if(_jsp_start_flag_20 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_20 != Tag.SKIP_BODY) {
                        _jsp_DeleteTag_20.doAfterBody();
                    }
                    _jsp_DeleteTag_20.doEndTag();
                    _jsp_DeleteTag_20.release();
                    // NODE END: lineNumber: 40, tagClassName: com.skin.ayada.jstl.io.DeleteTag, tagInstanceName: _jsp_DeleteTag_20

                    // NODE START: lineNumber: 41, offset: 21, length: 2, tagClassName: com.skin.ayada.jstl.core.ExitTag, tagInstanceName: _jsp_ExitTag_22
                    // <c:exit test=\"${1 == 1}\"/>
                    if(ExpressionUtil.getBoolean(expressionContext, "${1 == 1}")) {
                        return;
                    }
                    // jsp.jstl.core.ExitTag END
                    // NODE END: lineNumber: 41, tagClassName: com.skin.ayada.jstl.core.ExitTag, tagInstanceName: _jsp_ExitTag_22

                } // jsp.jstl.core.IfTag END
                // NODE END: lineNumber: 35, tagClassName: com.skin.ayada.jstl.core.IfTag, tagInstanceName: _jsp_IfTag_11

                _jsp_flag_10 = _jsp_DependentTag_10.doAfterBody();
            }
            while(_jsp_flag_10 == IterationTag.EVAL_BODY_AGAIN);
        }
        _jsp_DependentTag_10.doEndTag();
        _jsp_DependentTag_10.release();
        // NODE END: lineNumber: 33, tagClassName: com.skin.ayada.jstl.core.DependentTag, tagInstanceName: _jsp_DependentTag_10

        // TEXT: lineNumber: 43
        // out.write("\r\n\r\n<h1>sql:execute</h1>\r\n<h2>connection</h2>\r\n<p>1. get from attribute, example: connection=\"${expression}\"</p>\r\n<p>2. get from pageContext by name: connection</p>\r\n<p>3. get from parent tag</p>\r\n<p>4. throws exception</p>\r\n<p>template.home: ");
        out.write(_jsp_string_26, 0, _jsp_string_26.length);
        // EXPRESSION: lineNumber: 51
        expressionContext.print(out, expressionContext.getString("template.home"));
        // TEXT: lineNumber: 51
        // out.write("</p>\r\n\r\n<!-- use external connection -->\r\n");
        out.write(_jsp_string_28, 0, _jsp_string_28.length);

        // NODE START: lineNumber: 54, offset: 28, length: 2, tagClassName: com.skin.ayada.jstl.sql.ConnectTag, tagInstanceName: _jsp_ConnectTag_29
        // <sql:connect var=\"connection2\" connection=\"${myConnection}\">...</sql:connect>
        com.skin.ayada.jstl.sql.ConnectTag _jsp_ConnectTag_29 = new com.skin.ayada.jstl.sql.ConnectTag();
        try {
            _jsp_ConnectTag_29.setPageContext(pageContext);
            _jsp_ConnectTag_29.setParent((Tag)null);
            _jsp_ConnectTag_29.setVar("connection2");
            _jsp_ConnectTag_29.setConnection((java.sql.Connection)(ExpressionUtil.evaluate(expressionContext, "${myConnection}", java.sql.Connection.class)));
            int _jsp_start_flag_29 = _jsp_ConnectTag_29.doStartTag();

            if(_jsp_start_flag_29 == Tag.SKIP_PAGE) {
                return;
            }
            if(_jsp_start_flag_29 != Tag.SKIP_BODY) {
                _jsp_ConnectTag_29.doAfterBody();
            }
            _jsp_ConnectTag_29.doEndTag();
            _jsp_ConnectTag_29.release();
        }
        catch(Throwable throwable) {
            try {
                _jsp_ConnectTag_29.doCatch(throwable);
            } catch (Throwable t) {
                throw new Exception(t);
            }
        }
        finally {
            _jsp_ConnectTag_29.doFinally();
        }
        // NODE END: lineNumber: 54, tagClassName: com.skin.ayada.jstl.sql.ConnectTag, tagInstanceName: _jsp_ConnectTag_29

        // TEXT: lineNumber: 54
        // out.write("\r\n\r\n");
        out.write(_jsp_string_31, 0, _jsp_string_31.length);

        // NODE START: lineNumber: 56, offset: 31, length: 12, tagClassName: com.skin.ayada.jstl.core.IfTag, tagInstanceName: _jsp_IfTag_32
        // <c:if test=\"${1 == 1}\">...</c:if>
        if(ExpressionUtil.getBoolean(expressionContext, "${1 == 1}")) {
            // NODE START: lineNumber: 57, offset: 32, length: 2, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_33
            // <c:set var=\"createDatabaseUrl\" value=\"jdbc:mysql://localhost:3306?user=root&amp;password=1234&amp;characterEncoding=utf8\"/>
            pageContext.setAttribute("createDatabaseUrl", "jdbc:mysql://localhost:3306?user=root&password=1234&characterEncoding=utf8");
            // jsp.jstl.core.SetTag END
            // NODE END: lineNumber: 57, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_33

            // NODE START: lineNumber: 58, offset: 34, length: 2, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_35
            // <c:set var=\"url\" value=\"jdbc:mysql://localhost:3306/mytest2?user=root&amp;password=1234&amp;characterEncoding=utf8\"/>
            pageContext.setAttribute("url", "jdbc:mysql://localhost:3306/mytest2?user=root&password=1234&characterEncoding=utf8");
            // jsp.jstl.core.SetTag END
            // NODE END: lineNumber: 58, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_35

            // NODE START: lineNumber: 59, offset: 36, length: 2, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_37
            // <c:set var=\"driverClass\" value=\"com.mysql.jdbc.Driver\"/>
            pageContext.setAttribute("driverClass", "com.mysql.jdbc.Driver");
            // jsp.jstl.core.SetTag END
            // NODE END: lineNumber: 59, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_37

            // NODE START: lineNumber: 60, offset: 38, length: 2, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_39
            // <c:set var=\"userName\" value=\"root\"/>
            pageContext.setAttribute("userName", "root");
            // jsp.jstl.core.SetTag END
            // NODE END: lineNumber: 60, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_39

            // NODE START: lineNumber: 61, offset: 40, length: 2, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_41
            // <c:set var=\"password\" value=\"1234\"/>
            pageContext.setAttribute("password", 1234);
            // jsp.jstl.core.SetTag END
            // NODE END: lineNumber: 61, tagClassName: com.skin.ayada.jstl.core.SetTag, tagInstanceName: _jsp_SetTag_41

        } // jsp.jstl.core.IfTag END
        // NODE END: lineNumber: 56, tagClassName: com.skin.ayada.jstl.core.IfTag, tagInstanceName: _jsp_IfTag_32

        // TEXT: lineNumber: 62
        // out.write("\r\n\r\n");
        out.write(_jsp_string_44, 0, _jsp_string_44.length);

        // NODE START: lineNumber: 64, offset: 44, length: 7, tagClassName: com.skin.ayada.jstl.sql.ConnectTag, tagInstanceName: _jsp_ConnectTag_45
        // <sql:connect var=\"connection\" url=\"${createDatabaseUrl}\" driverClass=\"com.mysql.jdbc.Driver\" userName=\"${userName}\" password=\"${password}\">...</sql:connect>
        com.skin.ayada.jstl.sql.ConnectTag _jsp_ConnectTag_45 = new com.skin.ayada.jstl.sql.ConnectTag();
        try {
            _jsp_ConnectTag_45.setPageContext(pageContext);
            _jsp_ConnectTag_45.setParent((Tag)null);
            _jsp_ConnectTag_45.setVar("connection");
            _jsp_ConnectTag_45.setUrl(ExpressionUtil.getString(expressionContext, "${createDatabaseUrl}"));
            _jsp_ConnectTag_45.setDriverClass("com.mysql.jdbc.Driver");
            _jsp_ConnectTag_45.setUserName(ExpressionUtil.getString(expressionContext, "${userName}"));
            _jsp_ConnectTag_45.setPassword(ExpressionUtil.getString(expressionContext, "${password}"));
            int _jsp_start_flag_45 = _jsp_ConnectTag_45.doStartTag();

            if(_jsp_start_flag_45 == Tag.SKIP_PAGE) {
                return;
            }
            if(_jsp_start_flag_45 != Tag.SKIP_BODY) {
                int _jsp_flag_45 = 0;

                do {
                    // TEXT: lineNumber: 64
                    // out.write("\r\n    ");
                    out.write(_jsp_string_46, 0, _jsp_string_46.length);

                    // NODE START: lineNumber: 65, offset: 46, length: 3, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_47
                    // <sql:execute out=\"${pageContext}\">...</sql:execute>
                    com.skin.ayada.jstl.sql.SqlTag _jsp_SqlTag_47 = new com.skin.ayada.jstl.sql.SqlTag();
                    _jsp_SqlTag_47.setPageContext(pageContext);
                    _jsp_SqlTag_47.setParent(_jsp_ConnectTag_45);
                    _jsp_SqlTag_47.setOut(ExpressionUtil.evaluate(expressionContext, "${pageContext}", null));
                    int _jsp_start_flag_47 = _jsp_SqlTag_47.doStartTag();

                    if(_jsp_start_flag_47 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_47 != Tag.SKIP_BODY) {
                        int _jsp_flag_47 = 0;
                        if(_jsp_start_flag_47 == BodyTag.EVAL_BODY_BUFFERED) {
                            BodyContent _jsp_body_content_47 = pageContext.pushBody();
                            _jsp_SqlTag_47.setBodyContent(_jsp_body_content_47);
                            _jsp_SqlTag_47.doInitBody();
                            out = _jsp_body_content_47;
                        }

                        do {
                            // TEXT: lineNumber: 65
                            // out.write("\r\n        drop database if exists mytest2;\r\n        create database mytest2 character set utf8;\r\n    ");
                            out.write(_jsp_string_48, 0, _jsp_string_48.length);
                            _jsp_flag_47 = _jsp_SqlTag_47.doAfterBody();
                        }
                        while(_jsp_flag_47 == IterationTag.EVAL_BODY_AGAIN);
                        if(_jsp_start_flag_47 == BodyTag.EVAL_BODY_BUFFERED) {
                            out = pageContext.popBody();
                        }
                    }
                    _jsp_SqlTag_47.doEndTag();
                    _jsp_SqlTag_47.release();
                    // NODE END: lineNumber: 65, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_47

                    // TEXT: lineNumber: 68
                    // out.write("\r\n");
                    out.write(_jsp_string_50, 0, _jsp_string_50.length);
                    _jsp_flag_45 = _jsp_ConnectTag_45.doAfterBody();
                }
                while(_jsp_flag_45 == IterationTag.EVAL_BODY_AGAIN);
            }
            _jsp_ConnectTag_45.doEndTag();
            _jsp_ConnectTag_45.release();
        }
        catch(Throwable throwable) {
            try {
                _jsp_ConnectTag_45.doCatch(throwable);
            } catch (Throwable t) {
                throw new Exception(t);
            }
        }
        finally {
            _jsp_ConnectTag_45.doFinally();
        }
        // NODE END: lineNumber: 64, tagClassName: com.skin.ayada.jstl.sql.ConnectTag, tagInstanceName: _jsp_ConnectTag_45

        // TEXT: lineNumber: 69
        // out.write("\r\n\r\n");
        out.write(_jsp_string_52, 0, _jsp_string_52.length);

        // NODE START: lineNumber: 71, offset: 52, length: 56, tagClassName: com.skin.ayada.jstl.sql.ConnectTag, tagInstanceName: _jsp_ConnectTag_53
        // <sql:connect var=\"connection\" url=\"${url}\" driverClass=\"com.mysql.jdbc.Driver\" userName=\"${userName}\" password=\"${password}\">...</sql:connect>
        com.skin.ayada.jstl.sql.ConnectTag _jsp_ConnectTag_53 = new com.skin.ayada.jstl.sql.ConnectTag();
        try {
            _jsp_ConnectTag_53.setPageContext(pageContext);
            _jsp_ConnectTag_53.setParent((Tag)null);
            _jsp_ConnectTag_53.setVar("connection");
            _jsp_ConnectTag_53.setUrl(ExpressionUtil.getString(expressionContext, "${url}"));
            _jsp_ConnectTag_53.setDriverClass("com.mysql.jdbc.Driver");
            _jsp_ConnectTag_53.setUserName(ExpressionUtil.getString(expressionContext, "${userName}"));
            _jsp_ConnectTag_53.setPassword(ExpressionUtil.getString(expressionContext, "${password}"));
            int _jsp_start_flag_53 = _jsp_ConnectTag_53.doStartTag();

            if(_jsp_start_flag_53 == Tag.SKIP_PAGE) {
                return;
            }
            if(_jsp_start_flag_53 != Tag.SKIP_BODY) {
                int _jsp_flag_53 = 0;

                do {
                    // TEXT: lineNumber: 71
                    // out.write("\r\n    ");
                    out.write(_jsp_string_54, 0, _jsp_string_54.length);

                    // NODE START: lineNumber: 72, offset: 54, length: 2, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_55
                    // <sql:execute home=\"${template.home}/database\" file=\"create.sql\" encoding=\"UTF-8\" out=\"${pageContext}\"/>
                    com.skin.ayada.jstl.sql.SqlTag _jsp_SqlTag_55 = new com.skin.ayada.jstl.sql.SqlTag();
                    _jsp_SqlTag_55.setPageContext(pageContext);
                    _jsp_SqlTag_55.setParent(_jsp_ConnectTag_53);
                    _jsp_SqlTag_55.setHome(ExpressionUtil.getString(expressionContext, "${template.home}/database"));
                    _jsp_SqlTag_55.setFile("create.sql");
                    _jsp_SqlTag_55.setEncoding("UTF-8");
                    _jsp_SqlTag_55.setOut(ExpressionUtil.evaluate(expressionContext, "${pageContext}", null));
                    int _jsp_start_flag_55 = _jsp_SqlTag_55.doStartTag();

                    if(_jsp_start_flag_55 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_55 != Tag.SKIP_BODY) {
                        _jsp_SqlTag_55.doAfterBody();
                    }
                    _jsp_SqlTag_55.doEndTag();
                    _jsp_SqlTag_55.release();
                    // NODE END: lineNumber: 72, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_55

                    // TEXT: lineNumber: 72
                    // out.write("\r\n    ");
                    out.write(_jsp_string_57, 0, _jsp_string_57.length);

                    // NODE START: lineNumber: 73, offset: 57, length: 2, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_58
                    // <sql:execute sql=\"delete from my_test1;\" out=\"${pageContext}\"/>
                    com.skin.ayada.jstl.sql.SqlTag _jsp_SqlTag_58 = new com.skin.ayada.jstl.sql.SqlTag();
                    _jsp_SqlTag_58.setPageContext(pageContext);
                    _jsp_SqlTag_58.setParent(_jsp_ConnectTag_53);
                    _jsp_SqlTag_58.setSql("delete from my_test1;");
                    _jsp_SqlTag_58.setOut(ExpressionUtil.evaluate(expressionContext, "${pageContext}", null));
                    int _jsp_start_flag_58 = _jsp_SqlTag_58.doStartTag();

                    if(_jsp_start_flag_58 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_58 != Tag.SKIP_BODY) {
                        _jsp_SqlTag_58.doAfterBody();
                    }
                    _jsp_SqlTag_58.doEndTag();
                    _jsp_SqlTag_58.release();
                    // NODE END: lineNumber: 73, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_58

                    // TEXT: lineNumber: 73
                    // out.write("\r\n    ");
                    out.write(_jsp_string_60, 0, _jsp_string_60.length);

                    // NODE START: lineNumber: 74, offset: 60, length: 2, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_61
                    // <sql:execute sql=\"delete from my_test2;\" out=\"${pageContext}\"/>
                    com.skin.ayada.jstl.sql.SqlTag _jsp_SqlTag_61 = new com.skin.ayada.jstl.sql.SqlTag();
                    _jsp_SqlTag_61.setPageContext(pageContext);
                    _jsp_SqlTag_61.setParent(_jsp_ConnectTag_53);
                    _jsp_SqlTag_61.setSql("delete from my_test2;");
                    _jsp_SqlTag_61.setOut(ExpressionUtil.evaluate(expressionContext, "${pageContext}", null));
                    int _jsp_start_flag_61 = _jsp_SqlTag_61.doStartTag();

                    if(_jsp_start_flag_61 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_61 != Tag.SKIP_BODY) {
                        _jsp_SqlTag_61.doAfterBody();
                    }
                    _jsp_SqlTag_61.doEndTag();
                    _jsp_SqlTag_61.release();
                    // NODE END: lineNumber: 74, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_61

                    // TEXT: lineNumber: 74
                    // out.write("\r\n    ");
                    out.write(_jsp_string_63, 0, _jsp_string_63.length);

                    // NODE START: lineNumber: 75, offset: 63, length: 2, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_64
                    // <sql:execute sql=\"insert into my_test2(my_id, my_code, my_name) values (1, &#39;1&#39;, &#39;1&#39;);\"/>
                    com.skin.ayada.jstl.sql.SqlTag _jsp_SqlTag_64 = new com.skin.ayada.jstl.sql.SqlTag();
                    _jsp_SqlTag_64.setPageContext(pageContext);
                    _jsp_SqlTag_64.setParent(_jsp_ConnectTag_53);
                    _jsp_SqlTag_64.setSql("insert into my_test2(my_id, my_code, my_name) values (1, \'1\', \'1\');");
                    int _jsp_start_flag_64 = _jsp_SqlTag_64.doStartTag();

                    if(_jsp_start_flag_64 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_64 != Tag.SKIP_BODY) {
                        _jsp_SqlTag_64.doAfterBody();
                    }
                    _jsp_SqlTag_64.doEndTag();
                    _jsp_SqlTag_64.release();
                    // NODE END: lineNumber: 75, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_64

                    // TEXT: lineNumber: 75
                    // out.write("\r\n\r\n    ");
                    out.write(_jsp_string_66, 0, _jsp_string_66.length);

                    // NODE START: lineNumber: 77, offset: 66, length: 23, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_67
                    // <sql:execute out=\"${pageContext}\">...</sql:execute>
                    com.skin.ayada.jstl.sql.SqlTag _jsp_SqlTag_67 = new com.skin.ayada.jstl.sql.SqlTag();
                    _jsp_SqlTag_67.setPageContext(pageContext);
                    _jsp_SqlTag_67.setParent(_jsp_ConnectTag_53);
                    _jsp_SqlTag_67.setOut(ExpressionUtil.evaluate(expressionContext, "${pageContext}", null));
                    int _jsp_start_flag_67 = _jsp_SqlTag_67.doStartTag();

                    if(_jsp_start_flag_67 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_67 != Tag.SKIP_BODY) {
                        int _jsp_flag_67 = 0;
                        if(_jsp_start_flag_67 == BodyTag.EVAL_BODY_BUFFERED) {
                            BodyContent _jsp_body_content_67 = pageContext.pushBody();
                            _jsp_SqlTag_67.setBodyContent(_jsp_body_content_67);
                            _jsp_SqlTag_67.doInitBody();
                            out = _jsp_body_content_67;
                        }

                        do {
                            // TEXT: lineNumber: 77
                            // out.write("\r\n        ");
                            out.write(_jsp_string_68, 0, _jsp_string_68.length);

                            // NODE START: lineNumber: 78, offset: 68, length: 9, tagClassName: com.skin.ayada.jstl.core.ForEachTag, tagInstanceName: _jsp_ForEachTag_69
                            // <c:forEach items=\"1, 2, 3, 4, 5\" var=\"id\">...</c:forEach>
                            Object _jsp_old_var_69 = pageContext.getAttribute("id");
                            com.skin.ayada.jstl.core.ForEachTag _jsp_ForEachTag_69 = new com.skin.ayada.jstl.core.ForEachTag();
                            _jsp_ForEachTag_69.setParent(_jsp_SqlTag_67);
                            _jsp_ForEachTag_69.setPageContext(pageContext);
                            _jsp_ForEachTag_69.setVar("id");
                            _jsp_ForEachTag_69.setItems("1, 2, 3, 4, 5");
                            if(_jsp_ForEachTag_69.doStartTag() != Tag.SKIP_BODY) {
                                while(true) {
                                    // TEXT: lineNumber: 78
                                    // out.write("\r\n            insert into my_test1(my_id, my_code, my_name) values (");
                                    out.write(_jsp_string_70, 0, _jsp_string_70.length);
                                    // VARIABLE: lineNumber: 79
                                    expressionContext.print(out, pageContext.getAttribute("id"));
                                    // TEXT: lineNumber: 79
                                    // out.write(", \'");
                                    out.write(_jsp_string_72, 0, _jsp_string_72.length);
                                    // VARIABLE: lineNumber: 79
                                    expressionContext.print(out, pageContext.getAttribute("id"));
                                    // TEXT: lineNumber: 79
                                    // out.write("\', \'");
                                    out.write(_jsp_string_74, 0, _jsp_string_74.length);
                                    // VARIABLE: lineNumber: 79
                                    expressionContext.print(out, pageContext.getAttribute("id"));
                                    // TEXT: lineNumber: 79
                                    // out.write("\');\r\n        ");
                                    out.write(_jsp_string_76, 0, _jsp_string_76.length);
                                    if(_jsp_ForEachTag_69.doAfterBody() != IterationTag.EVAL_BODY_AGAIN) {
                                        break;
                                    }
                                }
                            }
                            _jsp_ForEachTag_69.release();
                            pageContext.setAttribute("id", _jsp_old_var_69);
                            // jsp.jstl.core.ForEachTag END
                            // NODE END: lineNumber: 78, tagClassName: com.skin.ayada.jstl.core.ForEachTag, tagInstanceName: _jsp_ForEachTag_69

                            // TEXT: lineNumber: 80
                            // out.write("\r\n        ");
                            out.write(_jsp_string_78, 0, _jsp_string_78.length);

                            // NODE START: lineNumber: 81, offset: 78, length: 9, tagClassName: com.skin.ayada.jstl.core.ForEachTag, tagInstanceName: _jsp_ForEachTag_79
                            // <c:forEach items=\"1, 2, 3, 4, 5\" var=\"id\">...</c:forEach>
                            Object _jsp_old_var_79 = pageContext.getAttribute("id");
                            com.skin.ayada.jstl.core.ForEachTag _jsp_ForEachTag_79 = new com.skin.ayada.jstl.core.ForEachTag();
                            _jsp_ForEachTag_79.setParent(_jsp_SqlTag_67);
                            _jsp_ForEachTag_79.setPageContext(pageContext);
                            _jsp_ForEachTag_79.setVar("id");
                            _jsp_ForEachTag_79.setItems("1, 2, 3, 4, 5");
                            if(_jsp_ForEachTag_79.doStartTag() != Tag.SKIP_BODY) {
                                while(true) {
                                    // TEXT: lineNumber: 81
                                    // out.write("\r\n            insert into my_test2(my_id, my_code, my_name) values (");
                                    out.write(_jsp_string_80, 0, _jsp_string_80.length);
                                    // VARIABLE: lineNumber: 82
                                    expressionContext.print(out, pageContext.getAttribute("id"));
                                    // TEXT: lineNumber: 82
                                    // out.write(", \'");
                                    out.write(_jsp_string_82, 0, _jsp_string_82.length);
                                    // VARIABLE: lineNumber: 82
                                    expressionContext.print(out, pageContext.getAttribute("id"));
                                    // TEXT: lineNumber: 82
                                    // out.write("\', \'");
                                    out.write(_jsp_string_84, 0, _jsp_string_84.length);
                                    // VARIABLE: lineNumber: 82
                                    expressionContext.print(out, pageContext.getAttribute("id"));
                                    // TEXT: lineNumber: 82
                                    // out.write("\');\r\n        ");
                                    out.write(_jsp_string_86, 0, _jsp_string_86.length);
                                    if(_jsp_ForEachTag_79.doAfterBody() != IterationTag.EVAL_BODY_AGAIN) {
                                        break;
                                    }
                                }
                            }
                            _jsp_ForEachTag_79.release();
                            pageContext.setAttribute("id", _jsp_old_var_79);
                            // jsp.jstl.core.ForEachTag END
                            // NODE END: lineNumber: 81, tagClassName: com.skin.ayada.jstl.core.ForEachTag, tagInstanceName: _jsp_ForEachTag_79

                            // TEXT: lineNumber: 83
                            // out.write("\r\n    ");
                            out.write(_jsp_string_88, 0, _jsp_string_88.length);
                            _jsp_flag_67 = _jsp_SqlTag_67.doAfterBody();
                        }
                        while(_jsp_flag_67 == IterationTag.EVAL_BODY_AGAIN);
                        if(_jsp_start_flag_67 == BodyTag.EVAL_BODY_BUFFERED) {
                            out = pageContext.popBody();
                        }
                    }
                    _jsp_SqlTag_67.doEndTag();
                    _jsp_SqlTag_67.release();
                    // NODE END: lineNumber: 77, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_67

                    // TEXT: lineNumber: 84
                    // out.write("\r\n\r\n    ");
                    out.write(_jsp_string_90, 0, _jsp_string_90.length);

                    // NODE START: lineNumber: 86, offset: 90, length: 3, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_91
                    // <sql:execute out=\"${pageContext.getOut()}\">...</sql:execute>
                    com.skin.ayada.jstl.sql.SqlTag _jsp_SqlTag_91 = new com.skin.ayada.jstl.sql.SqlTag();
                    _jsp_SqlTag_91.setPageContext(pageContext);
                    _jsp_SqlTag_91.setParent(_jsp_ConnectTag_53);
                    _jsp_SqlTag_91.setOut(ExpressionUtil.evaluate(expressionContext, "${pageContext.getOut()}", null));
                    int _jsp_start_flag_91 = _jsp_SqlTag_91.doStartTag();

                    if(_jsp_start_flag_91 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_91 != Tag.SKIP_BODY) {
                        int _jsp_flag_91 = 0;
                        if(_jsp_start_flag_91 == BodyTag.EVAL_BODY_BUFFERED) {
                            BodyContent _jsp_body_content_91 = pageContext.pushBody();
                            _jsp_SqlTag_91.setBodyContent(_jsp_body_content_91);
                            _jsp_SqlTag_91.doInitBody();
                            out = _jsp_body_content_91;
                        }

                        do {
                            // TEXT: lineNumber: 86
                            // out.write("\r\n        delete from my_test2;\r\n        insert into my_test2(my_id, my_code, my_name) values (1001, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1002, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1003, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1004, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1005, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1006, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1007, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1008, \'1001\', \'1001\');\r\n    ");
                            out.write(_jsp_string_92, 0, _jsp_string_92.length);
                            _jsp_flag_91 = _jsp_SqlTag_91.doAfterBody();
                        }
                        while(_jsp_flag_91 == IterationTag.EVAL_BODY_AGAIN);
                        if(_jsp_start_flag_91 == BodyTag.EVAL_BODY_BUFFERED) {
                            out = pageContext.popBody();
                        }
                    }
                    _jsp_SqlTag_91.doEndTag();
                    _jsp_SqlTag_91.release();
                    // NODE END: lineNumber: 86, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_91

                    // TEXT: lineNumber: 96
                    // out.write("\r\n\r\n    ");
                    out.write(_jsp_string_94, 0, _jsp_string_94.length);

                    // NODE START: lineNumber: 98, offset: 94, length: 2, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_95
                    // <sql:execute connection=\"${connection}\" sql=\"insert into my_test2(my_id, my_code, my_name) values (1009, &#39;1001&#39;, &#39;1001&#39;);\"/>
                    com.skin.ayada.jstl.sql.SqlTag _jsp_SqlTag_95 = new com.skin.ayada.jstl.sql.SqlTag();
                    _jsp_SqlTag_95.setPageContext(pageContext);
                    _jsp_SqlTag_95.setParent(_jsp_ConnectTag_53);
                    _jsp_SqlTag_95.setConnection((java.sql.Connection)(ExpressionUtil.evaluate(expressionContext, "${connection}", java.sql.Connection.class)));
                    _jsp_SqlTag_95.setSql("insert into my_test2(my_id, my_code, my_name) values (1009, \'1001\', \'1001\');");
                    int _jsp_start_flag_95 = _jsp_SqlTag_95.doStartTag();

                    if(_jsp_start_flag_95 == Tag.SKIP_PAGE) {
                        return;
                    }
                    if(_jsp_start_flag_95 != Tag.SKIP_BODY) {
                        _jsp_SqlTag_95.doAfterBody();
                    }
                    _jsp_SqlTag_95.doEndTag();
                    _jsp_SqlTag_95.release();
                    // NODE END: lineNumber: 98, tagClassName: com.skin.ayada.jstl.sql.SqlTag, tagInstanceName: _jsp_SqlTag_95

                    // TEXT: lineNumber: 98
                    // out.write("\r\n    <table>\r\n        <tr>\r\n            <td>id</td>\r\n            <td>userName</td>\r\n            <td>nickName</td>\r\n        </tr>\r\n        ");
                    out.write(_jsp_string_97, 0, _jsp_string_97.length);

                    // NODE START: lineNumber: 105, offset: 97, length: 9, tagClassName: com.skin.ayada.jstl.sql.QueryTag, tagInstanceName: _jsp_QueryTag_98
                    // <sql:query var=\"resultSet\" sql=\"select * from my_test2 where my_id &gt; 1001\" offset=\"2\" length=\"3\">...</sql:query>
                    com.skin.ayada.jstl.sql.QueryTag _jsp_QueryTag_98 = new com.skin.ayada.jstl.sql.QueryTag();
                    try {
                        _jsp_QueryTag_98.setPageContext(pageContext);
                        _jsp_QueryTag_98.setParent(_jsp_ConnectTag_53);
                        _jsp_QueryTag_98.setVar("resultSet");
                        _jsp_QueryTag_98.setSql("select * from my_test2 where my_id > 1001");
                        _jsp_QueryTag_98.setOffset(2);
                        _jsp_QueryTag_98.setLength(3);
                        int _jsp_start_flag_98 = _jsp_QueryTag_98.doStartTag();

                        if(_jsp_start_flag_98 == Tag.SKIP_PAGE) {
                            return;
                        }
                        if(_jsp_start_flag_98 != Tag.SKIP_BODY) {
                            int _jsp_flag_98 = 0;

                            do {
                                // TEXT: lineNumber: 105
                                // out.write("\r\n        <tr>\r\n            <td>");
                                out.write(_jsp_string_99, 0, _jsp_string_99.length);
                                // EXPRESSION: lineNumber: 107
                                expressionContext.print(out, expressionContext.getString("resultSet.getLong(\"my_id\")"));
                                // TEXT: lineNumber: 107
                                // out.write("</td>\r\n            <td>");
                                out.write(_jsp_string_101, 0, _jsp_string_101.length);
                                // EXPRESSION: lineNumber: 108
                                expressionContext.print(out, expressionContext.getString("resultSet.getString(\"my_code\")"));
                                // TEXT: lineNumber: 108
                                // out.write("</td>\r\n            <td>");
                                out.write(_jsp_string_103, 0, _jsp_string_103.length);
                                // EXPRESSION: lineNumber: 109
                                expressionContext.print(out, expressionContext.getString("resultSet.getString(\"my_name\")"));
                                // TEXT: lineNumber: 109
                                // out.write("</td>\r\n        </tr>\r\n        ");
                                out.write(_jsp_string_105, 0, _jsp_string_105.length);
                                _jsp_flag_98 = _jsp_QueryTag_98.doAfterBody();
                            }
                            while(_jsp_flag_98 == IterationTag.EVAL_BODY_AGAIN);
                        }
                        _jsp_QueryTag_98.doEndTag();
                        _jsp_QueryTag_98.release();
                    }
                    catch(Throwable throwable) {
                        try {
                            _jsp_QueryTag_98.doCatch(throwable);
                        } catch (Throwable t) {
                            throw new Exception(t);
                        }
                    }
                    finally {
                        _jsp_QueryTag_98.doFinally();
                    }
                    // NODE END: lineNumber: 105, tagClassName: com.skin.ayada.jstl.sql.QueryTag, tagInstanceName: _jsp_QueryTag_98

                    // TEXT: lineNumber: 111
                    // out.write("\r\n    </table>\r\n");
                    out.write(_jsp_string_107, 0, _jsp_string_107.length);
                    _jsp_flag_53 = _jsp_ConnectTag_53.doAfterBody();
                }
                while(_jsp_flag_53 == IterationTag.EVAL_BODY_AGAIN);
            }
            _jsp_ConnectTag_53.doEndTag();
            _jsp_ConnectTag_53.release();
        }
        catch(Throwable throwable) {
            try {
                _jsp_ConnectTag_53.doCatch(throwable);
            } catch (Throwable t) {
                throw new Exception(t);
            }
        }
        finally {
            _jsp_ConnectTag_53.doFinally();
        }
        // NODE END: lineNumber: 71, tagClassName: com.skin.ayada.jstl.sql.ConnectTag, tagInstanceName: _jsp_ConnectTag_53


        out.flush();
        jspWriter.flush();
    }

    public static final char[] _jsp_string_3 = "<!--\r\nt:import: 编译指令\r\n1. 可以放在任何位置, 但必须在使用之前引入\r\n2. 如果多次引入同一个tag, tag的bodyContent以最后一次引入的为准, 引擎在编译结束之后才会根据bodyContent的类型做一次紧缩处理\r\n   bodyContent: jsp|tagdependent|empty\r\n   如果是tagdependent, 那么该tag内部的所有文本节点和表达式节点都会被清除, 其子节点的内容不会清除(但是会根据子节点的bodyContent决定是否清除)\r\n   如果是empty, 那么内部的任何节点都会被清除\r\n   如果是jsp, 则保持现有内容不变\r\n   因此所有的引入操作最好放在文件头, 并且对同一个tag只引入一次\r\n\r\n3. className不是必选项, 可以为空, 如果为空则使用ayada-taglib-default.xml或者ayada-taglib.xml文件中配置的className, 因此下面的两种写法都是合法的\r\n        4. bodyContent和description都不是必选项, 可以为空, bodyContent默认为jsp\r\n-->\r\n<h1>tag.bodyContent</h1>\r\n<p>1. jsp: any content</p>\r\n<p>2. tagdependent: tag only</p>\r\n<p>3. empty: ignore any content</p>\r\n\r\n<!-- 使用重新定义的c:if标签, 该标签内部的所有文本内容在编译期都会被清除, 但是自标签的文本仍然可以输出 -->\r\n".toCharArray();
    public static final char[] _jsp_string_6 = "\"I\'m here !\"".toCharArray();
    public static final char[] _jsp_string_9 = "\r\n\r\n<!-- c:command的bodyContent被定义为tagdependent，因此内部的文本内容都会被忽略。-->\r\n".toCharArray();
    public static final char[] _jsp_string_26 = "\r\n\r\n<h1>sql:execute</h1>\r\n<h2>connection</h2>\r\n<p>1. get from attribute, example: connection=\"${expression}\"</p>\r\n<p>2. get from pageContext by name: connection</p>\r\n<p>3. get from parent tag</p>\r\n<p>4. throws exception</p>\r\n<p>template.home: ".toCharArray();
    public static final char[] _jsp_string_28 = "</p>\r\n\r\n<!-- use external connection -->\r\n".toCharArray();
    public static final char[] _jsp_string_31 = "\r\n\r\n".toCharArray();
    public static final char[] _jsp_string_44 = "\r\n\r\n".toCharArray();
    public static final char[] _jsp_string_46 = "\r\n    ".toCharArray();
    public static final char[] _jsp_string_48 = "\r\n        drop database if exists mytest2;\r\n        create database mytest2 character set utf8;\r\n    ".toCharArray();
    public static final char[] _jsp_string_50 = "\r\n".toCharArray();
    public static final char[] _jsp_string_52 = "\r\n\r\n".toCharArray();
    public static final char[] _jsp_string_54 = "\r\n    ".toCharArray();
    public static final char[] _jsp_string_57 = "\r\n    ".toCharArray();
    public static final char[] _jsp_string_60 = "\r\n    ".toCharArray();
    public static final char[] _jsp_string_63 = "\r\n    ".toCharArray();
    public static final char[] _jsp_string_66 = "\r\n\r\n    ".toCharArray();
    public static final char[] _jsp_string_68 = "\r\n        ".toCharArray();
    public static final char[] _jsp_string_70 = "\r\n            insert into my_test1(my_id, my_code, my_name) values (".toCharArray();
    public static final char[] _jsp_string_72 = ", \'".toCharArray();
    public static final char[] _jsp_string_74 = "\', \'".toCharArray();
    public static final char[] _jsp_string_76 = "\');\r\n        ".toCharArray();
    public static final char[] _jsp_string_78 = "\r\n        ".toCharArray();
    public static final char[] _jsp_string_80 = "\r\n            insert into my_test2(my_id, my_code, my_name) values (".toCharArray();
    public static final char[] _jsp_string_82 = ", \'".toCharArray();
    public static final char[] _jsp_string_84 = "\', \'".toCharArray();
    public static final char[] _jsp_string_86 = "\');\r\n        ".toCharArray();
    public static final char[] _jsp_string_88 = "\r\n    ".toCharArray();
    public static final char[] _jsp_string_90 = "\r\n\r\n    ".toCharArray();
    public static final char[] _jsp_string_92 = "\r\n        delete from my_test2;\r\n        insert into my_test2(my_id, my_code, my_name) values (1001, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1002, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1003, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1004, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1005, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1006, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1007, \'1001\', \'1001\');\r\n        insert into my_test2(my_id, my_code, my_name) values (1008, \'1001\', \'1001\');\r\n    ".toCharArray();
    public static final char[] _jsp_string_94 = "\r\n\r\n    ".toCharArray();
    public static final char[] _jsp_string_97 = "\r\n    <table>\r\n        <tr>\r\n            <td>id</td>\r\n            <td>userName</td>\r\n            <td>nickName</td>\r\n        </tr>\r\n        ".toCharArray();
    public static final char[] _jsp_string_99 = "\r\n        <tr>\r\n            <td>".toCharArray();
    public static final char[] _jsp_string_101 = "</td>\r\n            <td>".toCharArray();
    public static final char[] _jsp_string_103 = "</td>\r\n            <td>".toCharArray();
    public static final char[] _jsp_string_105 = "</td>\r\n        </tr>\r\n        ".toCharArray();
    public static final char[] _jsp_string_107 = "\r\n    </table>\r\n".toCharArray();

}
